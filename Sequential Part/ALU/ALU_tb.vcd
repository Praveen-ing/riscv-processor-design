$date
	Mon Mar  3 11:52:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! zero $end
$var wire 64 " result [63:0] $end
$var wire 1 # overflow $end
$var reg 4 $ Alu_control [3:0] $end
$var reg 64 % a [63:0] $end
$var reg 64 & b [63:0] $end
$scope module uut $end
$var wire 4 ' Alu_control [3:0] $end
$var wire 64 ( a [63:0] $end
$var wire 64 ) b [63:0] $end
$var wire 64 * sum_result [63:0] $end
$var wire 1 + sum_overflow $end
$var wire 1 , sum_cout $end
$var wire 64 - or_result [63:0] $end
$var wire 64 . diff_result [63:0] $end
$var wire 1 / diff_overflow $end
$var wire 1 0 diff_cout $end
$var wire 64 1 and_result [63:0] $end
$var reg 1 # overflow $end
$var reg 64 2 result [63:0] $end
$var reg 1 ! zero $end
$scope module adder $end
$var wire 64 3 a [63:0] $end
$var wire 64 4 b [63:0] $end
$var wire 1 5 cin $end
$var wire 1 + overflow $end
$var wire 64 6 sum [63:0] $end
$var wire 1 , cout $end
$var wire 65 7 c [64:0] $end
$scope begin gen[0] $end
$var parameter 2 8 i $end
$scope module fa $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$var wire 1 > w1 $end
$var wire 1 ? w2 $end
$var wire 1 @ w3 $end
$upscope $end
$upscope $end
$scope begin gen[1] $end
$var parameter 2 A i $end
$scope module fa $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E cout $end
$var wire 1 F sum $end
$var wire 1 G w1 $end
$var wire 1 H w2 $end
$var wire 1 I w3 $end
$upscope $end
$upscope $end
$scope begin gen[2] $end
$var parameter 3 J i $end
$scope module fa $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N cout $end
$var wire 1 O sum $end
$var wire 1 P w1 $end
$var wire 1 Q w2 $end
$var wire 1 R w3 $end
$upscope $end
$upscope $end
$scope begin gen[3] $end
$var parameter 3 S i $end
$scope module fa $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V cin $end
$var wire 1 W cout $end
$var wire 1 X sum $end
$var wire 1 Y w1 $end
$var wire 1 Z w2 $end
$var wire 1 [ w3 $end
$upscope $end
$upscope $end
$scope begin gen[4] $end
$var parameter 4 \ i $end
$scope module fa $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a sum $end
$var wire 1 b w1 $end
$var wire 1 c w2 $end
$var wire 1 d w3 $end
$upscope $end
$upscope $end
$scope begin gen[5] $end
$var parameter 4 e i $end
$scope module fa $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h cin $end
$var wire 1 i cout $end
$var wire 1 j sum $end
$var wire 1 k w1 $end
$var wire 1 l w2 $end
$var wire 1 m w3 $end
$upscope $end
$upscope $end
$scope begin gen[6] $end
$var parameter 4 n i $end
$scope module fa $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q cin $end
$var wire 1 r cout $end
$var wire 1 s sum $end
$var wire 1 t w1 $end
$var wire 1 u w2 $end
$var wire 1 v w3 $end
$upscope $end
$upscope $end
$scope begin gen[7] $end
$var parameter 4 w i $end
$scope module fa $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 z cin $end
$var wire 1 { cout $end
$var wire 1 | sum $end
$var wire 1 } w1 $end
$var wire 1 ~ w2 $end
$var wire 1 !" w3 $end
$upscope $end
$upscope $end
$scope begin gen[8] $end
$var parameter 5 "" i $end
$scope module fa $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var wire 1 %" cin $end
$var wire 1 &" cout $end
$var wire 1 '" sum $end
$var wire 1 (" w1 $end
$var wire 1 )" w2 $end
$var wire 1 *" w3 $end
$upscope $end
$upscope $end
$scope begin gen[9] $end
$var parameter 5 +" i $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$var wire 1 1" w1 $end
$var wire 1 2" w2 $end
$var wire 1 3" w3 $end
$upscope $end
$upscope $end
$scope begin gen[10] $end
$var parameter 5 4" i $end
$scope module fa $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" cin $end
$var wire 1 8" cout $end
$var wire 1 9" sum $end
$var wire 1 :" w1 $end
$var wire 1 ;" w2 $end
$var wire 1 <" w3 $end
$upscope $end
$upscope $end
$scope begin gen[11] $end
$var parameter 5 =" i $end
$scope module fa $end
$var wire 1 >" a $end
$var wire 1 ?" b $end
$var wire 1 @" cin $end
$var wire 1 A" cout $end
$var wire 1 B" sum $end
$var wire 1 C" w1 $end
$var wire 1 D" w2 $end
$var wire 1 E" w3 $end
$upscope $end
$upscope $end
$scope begin gen[12] $end
$var parameter 5 F" i $end
$scope module fa $end
$var wire 1 G" a $end
$var wire 1 H" b $end
$var wire 1 I" cin $end
$var wire 1 J" cout $end
$var wire 1 K" sum $end
$var wire 1 L" w1 $end
$var wire 1 M" w2 $end
$var wire 1 N" w3 $end
$upscope $end
$upscope $end
$scope begin gen[13] $end
$var parameter 5 O" i $end
$scope module fa $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" cin $end
$var wire 1 S" cout $end
$var wire 1 T" sum $end
$var wire 1 U" w1 $end
$var wire 1 V" w2 $end
$var wire 1 W" w3 $end
$upscope $end
$upscope $end
$scope begin gen[14] $end
$var parameter 5 X" i $end
$scope module fa $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 [" cin $end
$var wire 1 \" cout $end
$var wire 1 ]" sum $end
$var wire 1 ^" w1 $end
$var wire 1 _" w2 $end
$var wire 1 `" w3 $end
$upscope $end
$upscope $end
$scope begin gen[15] $end
$var parameter 5 a" i $end
$scope module fa $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 d" cin $end
$var wire 1 e" cout $end
$var wire 1 f" sum $end
$var wire 1 g" w1 $end
$var wire 1 h" w2 $end
$var wire 1 i" w3 $end
$upscope $end
$upscope $end
$scope begin gen[16] $end
$var parameter 6 j" i $end
$scope module fa $end
$var wire 1 k" a $end
$var wire 1 l" b $end
$var wire 1 m" cin $end
$var wire 1 n" cout $end
$var wire 1 o" sum $end
$var wire 1 p" w1 $end
$var wire 1 q" w2 $end
$var wire 1 r" w3 $end
$upscope $end
$upscope $end
$scope begin gen[17] $end
$var parameter 6 s" i $end
$scope module fa $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$var wire 1 y" w1 $end
$var wire 1 z" w2 $end
$var wire 1 {" w3 $end
$upscope $end
$upscope $end
$scope begin gen[18] $end
$var parameter 6 |" i $end
$scope module fa $end
$var wire 1 }" a $end
$var wire 1 ~" b $end
$var wire 1 !# cin $end
$var wire 1 "# cout $end
$var wire 1 ## sum $end
$var wire 1 $# w1 $end
$var wire 1 %# w2 $end
$var wire 1 &# w3 $end
$upscope $end
$upscope $end
$scope begin gen[19] $end
$var parameter 6 '# i $end
$scope module fa $end
$var wire 1 (# a $end
$var wire 1 )# b $end
$var wire 1 *# cin $end
$var wire 1 +# cout $end
$var wire 1 ,# sum $end
$var wire 1 -# w1 $end
$var wire 1 .# w2 $end
$var wire 1 /# w3 $end
$upscope $end
$upscope $end
$scope begin gen[20] $end
$var parameter 6 0# i $end
$scope module fa $end
$var wire 1 1# a $end
$var wire 1 2# b $end
$var wire 1 3# cin $end
$var wire 1 4# cout $end
$var wire 1 5# sum $end
$var wire 1 6# w1 $end
$var wire 1 7# w2 $end
$var wire 1 8# w3 $end
$upscope $end
$upscope $end
$scope begin gen[21] $end
$var parameter 6 9# i $end
$scope module fa $end
$var wire 1 :# a $end
$var wire 1 ;# b $end
$var wire 1 <# cin $end
$var wire 1 =# cout $end
$var wire 1 ># sum $end
$var wire 1 ?# w1 $end
$var wire 1 @# w2 $end
$var wire 1 A# w3 $end
$upscope $end
$upscope $end
$scope begin gen[22] $end
$var parameter 6 B# i $end
$scope module fa $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# cin $end
$var wire 1 F# cout $end
$var wire 1 G# sum $end
$var wire 1 H# w1 $end
$var wire 1 I# w2 $end
$var wire 1 J# w3 $end
$upscope $end
$upscope $end
$scope begin gen[23] $end
$var parameter 6 K# i $end
$scope module fa $end
$var wire 1 L# a $end
$var wire 1 M# b $end
$var wire 1 N# cin $end
$var wire 1 O# cout $end
$var wire 1 P# sum $end
$var wire 1 Q# w1 $end
$var wire 1 R# w2 $end
$var wire 1 S# w3 $end
$upscope $end
$upscope $end
$scope begin gen[24] $end
$var parameter 6 T# i $end
$scope module fa $end
$var wire 1 U# a $end
$var wire 1 V# b $end
$var wire 1 W# cin $end
$var wire 1 X# cout $end
$var wire 1 Y# sum $end
$var wire 1 Z# w1 $end
$var wire 1 [# w2 $end
$var wire 1 \# w3 $end
$upscope $end
$upscope $end
$scope begin gen[25] $end
$var parameter 6 ]# i $end
$scope module fa $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# cin $end
$var wire 1 a# cout $end
$var wire 1 b# sum $end
$var wire 1 c# w1 $end
$var wire 1 d# w2 $end
$var wire 1 e# w3 $end
$upscope $end
$upscope $end
$scope begin gen[26] $end
$var parameter 6 f# i $end
$scope module fa $end
$var wire 1 g# a $end
$var wire 1 h# b $end
$var wire 1 i# cin $end
$var wire 1 j# cout $end
$var wire 1 k# sum $end
$var wire 1 l# w1 $end
$var wire 1 m# w2 $end
$var wire 1 n# w3 $end
$upscope $end
$upscope $end
$scope begin gen[27] $end
$var parameter 6 o# i $end
$scope module fa $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 r# cin $end
$var wire 1 s# cout $end
$var wire 1 t# sum $end
$var wire 1 u# w1 $end
$var wire 1 v# w2 $end
$var wire 1 w# w3 $end
$upscope $end
$upscope $end
$scope begin gen[28] $end
$var parameter 6 x# i $end
$scope module fa $end
$var wire 1 y# a $end
$var wire 1 z# b $end
$var wire 1 {# cin $end
$var wire 1 |# cout $end
$var wire 1 }# sum $end
$var wire 1 ~# w1 $end
$var wire 1 !$ w2 $end
$var wire 1 "$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[29] $end
$var parameter 6 #$ i $end
$scope module fa $end
$var wire 1 $$ a $end
$var wire 1 %$ b $end
$var wire 1 &$ cin $end
$var wire 1 '$ cout $end
$var wire 1 ($ sum $end
$var wire 1 )$ w1 $end
$var wire 1 *$ w2 $end
$var wire 1 +$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[30] $end
$var parameter 6 ,$ i $end
$scope module fa $end
$var wire 1 -$ a $end
$var wire 1 .$ b $end
$var wire 1 /$ cin $end
$var wire 1 0$ cout $end
$var wire 1 1$ sum $end
$var wire 1 2$ w1 $end
$var wire 1 3$ w2 $end
$var wire 1 4$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[31] $end
$var parameter 6 5$ i $end
$scope module fa $end
$var wire 1 6$ a $end
$var wire 1 7$ b $end
$var wire 1 8$ cin $end
$var wire 1 9$ cout $end
$var wire 1 :$ sum $end
$var wire 1 ;$ w1 $end
$var wire 1 <$ w2 $end
$var wire 1 =$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[32] $end
$var parameter 7 >$ i $end
$scope module fa $end
$var wire 1 ?$ a $end
$var wire 1 @$ b $end
$var wire 1 A$ cin $end
$var wire 1 B$ cout $end
$var wire 1 C$ sum $end
$var wire 1 D$ w1 $end
$var wire 1 E$ w2 $end
$var wire 1 F$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[33] $end
$var parameter 7 G$ i $end
$scope module fa $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ sum $end
$var wire 1 M$ w1 $end
$var wire 1 N$ w2 $end
$var wire 1 O$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[34] $end
$var parameter 7 P$ i $end
$scope module fa $end
$var wire 1 Q$ a $end
$var wire 1 R$ b $end
$var wire 1 S$ cin $end
$var wire 1 T$ cout $end
$var wire 1 U$ sum $end
$var wire 1 V$ w1 $end
$var wire 1 W$ w2 $end
$var wire 1 X$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[35] $end
$var parameter 7 Y$ i $end
$scope module fa $end
$var wire 1 Z$ a $end
$var wire 1 [$ b $end
$var wire 1 \$ cin $end
$var wire 1 ]$ cout $end
$var wire 1 ^$ sum $end
$var wire 1 _$ w1 $end
$var wire 1 `$ w2 $end
$var wire 1 a$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[36] $end
$var parameter 7 b$ i $end
$scope module fa $end
$var wire 1 c$ a $end
$var wire 1 d$ b $end
$var wire 1 e$ cin $end
$var wire 1 f$ cout $end
$var wire 1 g$ sum $end
$var wire 1 h$ w1 $end
$var wire 1 i$ w2 $end
$var wire 1 j$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[37] $end
$var parameter 7 k$ i $end
$scope module fa $end
$var wire 1 l$ a $end
$var wire 1 m$ b $end
$var wire 1 n$ cin $end
$var wire 1 o$ cout $end
$var wire 1 p$ sum $end
$var wire 1 q$ w1 $end
$var wire 1 r$ w2 $end
$var wire 1 s$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[38] $end
$var parameter 7 t$ i $end
$scope module fa $end
$var wire 1 u$ a $end
$var wire 1 v$ b $end
$var wire 1 w$ cin $end
$var wire 1 x$ cout $end
$var wire 1 y$ sum $end
$var wire 1 z$ w1 $end
$var wire 1 {$ w2 $end
$var wire 1 |$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[39] $end
$var parameter 7 }$ i $end
$scope module fa $end
$var wire 1 ~$ a $end
$var wire 1 !% b $end
$var wire 1 "% cin $end
$var wire 1 #% cout $end
$var wire 1 $% sum $end
$var wire 1 %% w1 $end
$var wire 1 &% w2 $end
$var wire 1 '% w3 $end
$upscope $end
$upscope $end
$scope begin gen[40] $end
$var parameter 7 (% i $end
$scope module fa $end
$var wire 1 )% a $end
$var wire 1 *% b $end
$var wire 1 +% cin $end
$var wire 1 ,% cout $end
$var wire 1 -% sum $end
$var wire 1 .% w1 $end
$var wire 1 /% w2 $end
$var wire 1 0% w3 $end
$upscope $end
$upscope $end
$scope begin gen[41] $end
$var parameter 7 1% i $end
$scope module fa $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% cin $end
$var wire 1 5% cout $end
$var wire 1 6% sum $end
$var wire 1 7% w1 $end
$var wire 1 8% w2 $end
$var wire 1 9% w3 $end
$upscope $end
$upscope $end
$scope begin gen[42] $end
$var parameter 7 :% i $end
$scope module fa $end
$var wire 1 ;% a $end
$var wire 1 <% b $end
$var wire 1 =% cin $end
$var wire 1 >% cout $end
$var wire 1 ?% sum $end
$var wire 1 @% w1 $end
$var wire 1 A% w2 $end
$var wire 1 B% w3 $end
$upscope $end
$upscope $end
$scope begin gen[43] $end
$var parameter 7 C% i $end
$scope module fa $end
$var wire 1 D% a $end
$var wire 1 E% b $end
$var wire 1 F% cin $end
$var wire 1 G% cout $end
$var wire 1 H% sum $end
$var wire 1 I% w1 $end
$var wire 1 J% w2 $end
$var wire 1 K% w3 $end
$upscope $end
$upscope $end
$scope begin gen[44] $end
$var parameter 7 L% i $end
$scope module fa $end
$var wire 1 M% a $end
$var wire 1 N% b $end
$var wire 1 O% cin $end
$var wire 1 P% cout $end
$var wire 1 Q% sum $end
$var wire 1 R% w1 $end
$var wire 1 S% w2 $end
$var wire 1 T% w3 $end
$upscope $end
$upscope $end
$scope begin gen[45] $end
$var parameter 7 U% i $end
$scope module fa $end
$var wire 1 V% a $end
$var wire 1 W% b $end
$var wire 1 X% cin $end
$var wire 1 Y% cout $end
$var wire 1 Z% sum $end
$var wire 1 [% w1 $end
$var wire 1 \% w2 $end
$var wire 1 ]% w3 $end
$upscope $end
$upscope $end
$scope begin gen[46] $end
$var parameter 7 ^% i $end
$scope module fa $end
$var wire 1 _% a $end
$var wire 1 `% b $end
$var wire 1 a% cin $end
$var wire 1 b% cout $end
$var wire 1 c% sum $end
$var wire 1 d% w1 $end
$var wire 1 e% w2 $end
$var wire 1 f% w3 $end
$upscope $end
$upscope $end
$scope begin gen[47] $end
$var parameter 7 g% i $end
$scope module fa $end
$var wire 1 h% a $end
$var wire 1 i% b $end
$var wire 1 j% cin $end
$var wire 1 k% cout $end
$var wire 1 l% sum $end
$var wire 1 m% w1 $end
$var wire 1 n% w2 $end
$var wire 1 o% w3 $end
$upscope $end
$upscope $end
$scope begin gen[48] $end
$var parameter 7 p% i $end
$scope module fa $end
$var wire 1 q% a $end
$var wire 1 r% b $end
$var wire 1 s% cin $end
$var wire 1 t% cout $end
$var wire 1 u% sum $end
$var wire 1 v% w1 $end
$var wire 1 w% w2 $end
$var wire 1 x% w3 $end
$upscope $end
$upscope $end
$scope begin gen[49] $end
$var parameter 7 y% i $end
$scope module fa $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% cin $end
$var wire 1 }% cout $end
$var wire 1 ~% sum $end
$var wire 1 !& w1 $end
$var wire 1 "& w2 $end
$var wire 1 #& w3 $end
$upscope $end
$upscope $end
$scope begin gen[50] $end
$var parameter 7 $& i $end
$scope module fa $end
$var wire 1 %& a $end
$var wire 1 && b $end
$var wire 1 '& cin $end
$var wire 1 (& cout $end
$var wire 1 )& sum $end
$var wire 1 *& w1 $end
$var wire 1 +& w2 $end
$var wire 1 ,& w3 $end
$upscope $end
$upscope $end
$scope begin gen[51] $end
$var parameter 7 -& i $end
$scope module fa $end
$var wire 1 .& a $end
$var wire 1 /& b $end
$var wire 1 0& cin $end
$var wire 1 1& cout $end
$var wire 1 2& sum $end
$var wire 1 3& w1 $end
$var wire 1 4& w2 $end
$var wire 1 5& w3 $end
$upscope $end
$upscope $end
$scope begin gen[52] $end
$var parameter 7 6& i $end
$scope module fa $end
$var wire 1 7& a $end
$var wire 1 8& b $end
$var wire 1 9& cin $end
$var wire 1 :& cout $end
$var wire 1 ;& sum $end
$var wire 1 <& w1 $end
$var wire 1 =& w2 $end
$var wire 1 >& w3 $end
$upscope $end
$upscope $end
$scope begin gen[53] $end
$var parameter 7 ?& i $end
$scope module fa $end
$var wire 1 @& a $end
$var wire 1 A& b $end
$var wire 1 B& cin $end
$var wire 1 C& cout $end
$var wire 1 D& sum $end
$var wire 1 E& w1 $end
$var wire 1 F& w2 $end
$var wire 1 G& w3 $end
$upscope $end
$upscope $end
$scope begin gen[54] $end
$var parameter 7 H& i $end
$scope module fa $end
$var wire 1 I& a $end
$var wire 1 J& b $end
$var wire 1 K& cin $end
$var wire 1 L& cout $end
$var wire 1 M& sum $end
$var wire 1 N& w1 $end
$var wire 1 O& w2 $end
$var wire 1 P& w3 $end
$upscope $end
$upscope $end
$scope begin gen[55] $end
$var parameter 7 Q& i $end
$scope module fa $end
$var wire 1 R& a $end
$var wire 1 S& b $end
$var wire 1 T& cin $end
$var wire 1 U& cout $end
$var wire 1 V& sum $end
$var wire 1 W& w1 $end
$var wire 1 X& w2 $end
$var wire 1 Y& w3 $end
$upscope $end
$upscope $end
$scope begin gen[56] $end
$var parameter 7 Z& i $end
$scope module fa $end
$var wire 1 [& a $end
$var wire 1 \& b $end
$var wire 1 ]& cin $end
$var wire 1 ^& cout $end
$var wire 1 _& sum $end
$var wire 1 `& w1 $end
$var wire 1 a& w2 $end
$var wire 1 b& w3 $end
$upscope $end
$upscope $end
$scope begin gen[57] $end
$var parameter 7 c& i $end
$scope module fa $end
$var wire 1 d& a $end
$var wire 1 e& b $end
$var wire 1 f& cin $end
$var wire 1 g& cout $end
$var wire 1 h& sum $end
$var wire 1 i& w1 $end
$var wire 1 j& w2 $end
$var wire 1 k& w3 $end
$upscope $end
$upscope $end
$scope begin gen[58] $end
$var parameter 7 l& i $end
$scope module fa $end
$var wire 1 m& a $end
$var wire 1 n& b $end
$var wire 1 o& cin $end
$var wire 1 p& cout $end
$var wire 1 q& sum $end
$var wire 1 r& w1 $end
$var wire 1 s& w2 $end
$var wire 1 t& w3 $end
$upscope $end
$upscope $end
$scope begin gen[59] $end
$var parameter 7 u& i $end
$scope module fa $end
$var wire 1 v& a $end
$var wire 1 w& b $end
$var wire 1 x& cin $end
$var wire 1 y& cout $end
$var wire 1 z& sum $end
$var wire 1 {& w1 $end
$var wire 1 |& w2 $end
$var wire 1 }& w3 $end
$upscope $end
$upscope $end
$scope begin gen[60] $end
$var parameter 7 ~& i $end
$scope module fa $end
$var wire 1 !' a $end
$var wire 1 "' b $end
$var wire 1 #' cin $end
$var wire 1 $' cout $end
$var wire 1 %' sum $end
$var wire 1 &' w1 $end
$var wire 1 '' w2 $end
$var wire 1 (' w3 $end
$upscope $end
$upscope $end
$scope begin gen[61] $end
$var parameter 7 )' i $end
$scope module fa $end
$var wire 1 *' a $end
$var wire 1 +' b $end
$var wire 1 ,' cin $end
$var wire 1 -' cout $end
$var wire 1 .' sum $end
$var wire 1 /' w1 $end
$var wire 1 0' w2 $end
$var wire 1 1' w3 $end
$upscope $end
$upscope $end
$scope begin gen[62] $end
$var parameter 7 2' i $end
$scope module fa $end
$var wire 1 3' a $end
$var wire 1 4' b $end
$var wire 1 5' cin $end
$var wire 1 6' cout $end
$var wire 1 7' sum $end
$var wire 1 8' w1 $end
$var wire 1 9' w2 $end
$var wire 1 :' w3 $end
$upscope $end
$upscope $end
$scope begin gen[63] $end
$var parameter 7 ;' i $end
$scope module fa $end
$var wire 1 <' a $end
$var wire 1 =' b $end
$var wire 1 >' cin $end
$var wire 1 ?' cout $end
$var wire 1 @' sum $end
$var wire 1 A' w1 $end
$var wire 1 B' w2 $end
$var wire 1 C' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module and_gate $end
$var wire 64 D' a [63:0] $end
$var wire 64 E' b [63:0] $end
$var wire 64 F' result [63:0] $end
$scope begin And_block[0] $end
$var parameter 2 G' i $end
$upscope $end
$scope begin And_block[1] $end
$var parameter 2 H' i $end
$upscope $end
$scope begin And_block[2] $end
$var parameter 3 I' i $end
$upscope $end
$scope begin And_block[3] $end
$var parameter 3 J' i $end
$upscope $end
$scope begin And_block[4] $end
$var parameter 4 K' i $end
$upscope $end
$scope begin And_block[5] $end
$var parameter 4 L' i $end
$upscope $end
$scope begin And_block[6] $end
$var parameter 4 M' i $end
$upscope $end
$scope begin And_block[7] $end
$var parameter 4 N' i $end
$upscope $end
$scope begin And_block[8] $end
$var parameter 5 O' i $end
$upscope $end
$scope begin And_block[9] $end
$var parameter 5 P' i $end
$upscope $end
$scope begin And_block[10] $end
$var parameter 5 Q' i $end
$upscope $end
$scope begin And_block[11] $end
$var parameter 5 R' i $end
$upscope $end
$scope begin And_block[12] $end
$var parameter 5 S' i $end
$upscope $end
$scope begin And_block[13] $end
$var parameter 5 T' i $end
$upscope $end
$scope begin And_block[14] $end
$var parameter 5 U' i $end
$upscope $end
$scope begin And_block[15] $end
$var parameter 5 V' i $end
$upscope $end
$scope begin And_block[16] $end
$var parameter 6 W' i $end
$upscope $end
$scope begin And_block[17] $end
$var parameter 6 X' i $end
$upscope $end
$scope begin And_block[18] $end
$var parameter 6 Y' i $end
$upscope $end
$scope begin And_block[19] $end
$var parameter 6 Z' i $end
$upscope $end
$scope begin And_block[20] $end
$var parameter 6 [' i $end
$upscope $end
$scope begin And_block[21] $end
$var parameter 6 \' i $end
$upscope $end
$scope begin And_block[22] $end
$var parameter 6 ]' i $end
$upscope $end
$scope begin And_block[23] $end
$var parameter 6 ^' i $end
$upscope $end
$scope begin And_block[24] $end
$var parameter 6 _' i $end
$upscope $end
$scope begin And_block[25] $end
$var parameter 6 `' i $end
$upscope $end
$scope begin And_block[26] $end
$var parameter 6 a' i $end
$upscope $end
$scope begin And_block[27] $end
$var parameter 6 b' i $end
$upscope $end
$scope begin And_block[28] $end
$var parameter 6 c' i $end
$upscope $end
$scope begin And_block[29] $end
$var parameter 6 d' i $end
$upscope $end
$scope begin And_block[30] $end
$var parameter 6 e' i $end
$upscope $end
$scope begin And_block[31] $end
$var parameter 6 f' i $end
$upscope $end
$scope begin And_block[32] $end
$var parameter 7 g' i $end
$upscope $end
$scope begin And_block[33] $end
$var parameter 7 h' i $end
$upscope $end
$scope begin And_block[34] $end
$var parameter 7 i' i $end
$upscope $end
$scope begin And_block[35] $end
$var parameter 7 j' i $end
$upscope $end
$scope begin And_block[36] $end
$var parameter 7 k' i $end
$upscope $end
$scope begin And_block[37] $end
$var parameter 7 l' i $end
$upscope $end
$scope begin And_block[38] $end
$var parameter 7 m' i $end
$upscope $end
$scope begin And_block[39] $end
$var parameter 7 n' i $end
$upscope $end
$scope begin And_block[40] $end
$var parameter 7 o' i $end
$upscope $end
$scope begin And_block[41] $end
$var parameter 7 p' i $end
$upscope $end
$scope begin And_block[42] $end
$var parameter 7 q' i $end
$upscope $end
$scope begin And_block[43] $end
$var parameter 7 r' i $end
$upscope $end
$scope begin And_block[44] $end
$var parameter 7 s' i $end
$upscope $end
$scope begin And_block[45] $end
$var parameter 7 t' i $end
$upscope $end
$scope begin And_block[46] $end
$var parameter 7 u' i $end
$upscope $end
$scope begin And_block[47] $end
$var parameter 7 v' i $end
$upscope $end
$scope begin And_block[48] $end
$var parameter 7 w' i $end
$upscope $end
$scope begin And_block[49] $end
$var parameter 7 x' i $end
$upscope $end
$scope begin And_block[50] $end
$var parameter 7 y' i $end
$upscope $end
$scope begin And_block[51] $end
$var parameter 7 z' i $end
$upscope $end
$scope begin And_block[52] $end
$var parameter 7 {' i $end
$upscope $end
$scope begin And_block[53] $end
$var parameter 7 |' i $end
$upscope $end
$scope begin And_block[54] $end
$var parameter 7 }' i $end
$upscope $end
$scope begin And_block[55] $end
$var parameter 7 ~' i $end
$upscope $end
$scope begin And_block[56] $end
$var parameter 7 !( i $end
$upscope $end
$scope begin And_block[57] $end
$var parameter 7 "( i $end
$upscope $end
$scope begin And_block[58] $end
$var parameter 7 #( i $end
$upscope $end
$scope begin And_block[59] $end
$var parameter 7 $( i $end
$upscope $end
$scope begin And_block[60] $end
$var parameter 7 %( i $end
$upscope $end
$scope begin And_block[61] $end
$var parameter 7 &( i $end
$upscope $end
$scope begin And_block[62] $end
$var parameter 7 '( i $end
$upscope $end
$scope begin And_block[63] $end
$var parameter 7 (( i $end
$upscope $end
$upscope $end
$scope module or_gate $end
$var wire 64 )( a [63:0] $end
$var wire 64 *( b [63:0] $end
$var wire 64 +( result [63:0] $end
$scope begin Or_block[0] $end
$var parameter 2 ,( i $end
$upscope $end
$scope begin Or_block[1] $end
$var parameter 2 -( i $end
$upscope $end
$scope begin Or_block[2] $end
$var parameter 3 .( i $end
$upscope $end
$scope begin Or_block[3] $end
$var parameter 3 /( i $end
$upscope $end
$scope begin Or_block[4] $end
$var parameter 4 0( i $end
$upscope $end
$scope begin Or_block[5] $end
$var parameter 4 1( i $end
$upscope $end
$scope begin Or_block[6] $end
$var parameter 4 2( i $end
$upscope $end
$scope begin Or_block[7] $end
$var parameter 4 3( i $end
$upscope $end
$scope begin Or_block[8] $end
$var parameter 5 4( i $end
$upscope $end
$scope begin Or_block[9] $end
$var parameter 5 5( i $end
$upscope $end
$scope begin Or_block[10] $end
$var parameter 5 6( i $end
$upscope $end
$scope begin Or_block[11] $end
$var parameter 5 7( i $end
$upscope $end
$scope begin Or_block[12] $end
$var parameter 5 8( i $end
$upscope $end
$scope begin Or_block[13] $end
$var parameter 5 9( i $end
$upscope $end
$scope begin Or_block[14] $end
$var parameter 5 :( i $end
$upscope $end
$scope begin Or_block[15] $end
$var parameter 5 ;( i $end
$upscope $end
$scope begin Or_block[16] $end
$var parameter 6 <( i $end
$upscope $end
$scope begin Or_block[17] $end
$var parameter 6 =( i $end
$upscope $end
$scope begin Or_block[18] $end
$var parameter 6 >( i $end
$upscope $end
$scope begin Or_block[19] $end
$var parameter 6 ?( i $end
$upscope $end
$scope begin Or_block[20] $end
$var parameter 6 @( i $end
$upscope $end
$scope begin Or_block[21] $end
$var parameter 6 A( i $end
$upscope $end
$scope begin Or_block[22] $end
$var parameter 6 B( i $end
$upscope $end
$scope begin Or_block[23] $end
$var parameter 6 C( i $end
$upscope $end
$scope begin Or_block[24] $end
$var parameter 6 D( i $end
$upscope $end
$scope begin Or_block[25] $end
$var parameter 6 E( i $end
$upscope $end
$scope begin Or_block[26] $end
$var parameter 6 F( i $end
$upscope $end
$scope begin Or_block[27] $end
$var parameter 6 G( i $end
$upscope $end
$scope begin Or_block[28] $end
$var parameter 6 H( i $end
$upscope $end
$scope begin Or_block[29] $end
$var parameter 6 I( i $end
$upscope $end
$scope begin Or_block[30] $end
$var parameter 6 J( i $end
$upscope $end
$scope begin Or_block[31] $end
$var parameter 6 K( i $end
$upscope $end
$scope begin Or_block[32] $end
$var parameter 7 L( i $end
$upscope $end
$scope begin Or_block[33] $end
$var parameter 7 M( i $end
$upscope $end
$scope begin Or_block[34] $end
$var parameter 7 N( i $end
$upscope $end
$scope begin Or_block[35] $end
$var parameter 7 O( i $end
$upscope $end
$scope begin Or_block[36] $end
$var parameter 7 P( i $end
$upscope $end
$scope begin Or_block[37] $end
$var parameter 7 Q( i $end
$upscope $end
$scope begin Or_block[38] $end
$var parameter 7 R( i $end
$upscope $end
$scope begin Or_block[39] $end
$var parameter 7 S( i $end
$upscope $end
$scope begin Or_block[40] $end
$var parameter 7 T( i $end
$upscope $end
$scope begin Or_block[41] $end
$var parameter 7 U( i $end
$upscope $end
$scope begin Or_block[42] $end
$var parameter 7 V( i $end
$upscope $end
$scope begin Or_block[43] $end
$var parameter 7 W( i $end
$upscope $end
$scope begin Or_block[44] $end
$var parameter 7 X( i $end
$upscope $end
$scope begin Or_block[45] $end
$var parameter 7 Y( i $end
$upscope $end
$scope begin Or_block[46] $end
$var parameter 7 Z( i $end
$upscope $end
$scope begin Or_block[47] $end
$var parameter 7 [( i $end
$upscope $end
$scope begin Or_block[48] $end
$var parameter 7 \( i $end
$upscope $end
$scope begin Or_block[49] $end
$var parameter 7 ]( i $end
$upscope $end
$scope begin Or_block[50] $end
$var parameter 7 ^( i $end
$upscope $end
$scope begin Or_block[51] $end
$var parameter 7 _( i $end
$upscope $end
$scope begin Or_block[52] $end
$var parameter 7 `( i $end
$upscope $end
$scope begin Or_block[53] $end
$var parameter 7 a( i $end
$upscope $end
$scope begin Or_block[54] $end
$var parameter 7 b( i $end
$upscope $end
$scope begin Or_block[55] $end
$var parameter 7 c( i $end
$upscope $end
$scope begin Or_block[56] $end
$var parameter 7 d( i $end
$upscope $end
$scope begin Or_block[57] $end
$var parameter 7 e( i $end
$upscope $end
$scope begin Or_block[58] $end
$var parameter 7 f( i $end
$upscope $end
$scope begin Or_block[59] $end
$var parameter 7 g( i $end
$upscope $end
$scope begin Or_block[60] $end
$var parameter 7 h( i $end
$upscope $end
$scope begin Or_block[61] $end
$var parameter 7 i( i $end
$upscope $end
$scope begin Or_block[62] $end
$var parameter 7 j( i $end
$upscope $end
$scope begin Or_block[63] $end
$var parameter 7 k( i $end
$upscope $end
$upscope $end
$scope module subtractor $end
$var wire 64 l( a [63:0] $end
$var wire 64 m( b [63:0] $end
$var wire 1 n( cin $end
$var wire 1 / overflow $end
$var wire 64 o( diff [63:0] $end
$var wire 1 0 cout $end
$var wire 65 p( c [64:0] $end
$scope begin gen[0] $end
$var parameter 2 q( i $end
$scope module fs $end
$var wire 1 r( a $end
$var wire 1 s( b $end
$var wire 1 t( cin $end
$var wire 1 u( cout $end
$var wire 1 v( sum $end
$var wire 1 w( w1 $end
$var wire 1 x( w2 $end
$var wire 1 y( w3 $end
$upscope $end
$upscope $end
$scope begin gen[1] $end
$var parameter 2 z( i $end
$scope module fs $end
$var wire 1 {( a $end
$var wire 1 |( b $end
$var wire 1 }( cin $end
$var wire 1 ~( cout $end
$var wire 1 !) sum $end
$var wire 1 ") w1 $end
$var wire 1 #) w2 $end
$var wire 1 $) w3 $end
$upscope $end
$upscope $end
$scope begin gen[2] $end
$var parameter 3 %) i $end
$scope module fs $end
$var wire 1 &) a $end
$var wire 1 ') b $end
$var wire 1 () cin $end
$var wire 1 )) cout $end
$var wire 1 *) sum $end
$var wire 1 +) w1 $end
$var wire 1 ,) w2 $end
$var wire 1 -) w3 $end
$upscope $end
$upscope $end
$scope begin gen[3] $end
$var parameter 3 .) i $end
$scope module fs $end
$var wire 1 /) a $end
$var wire 1 0) b $end
$var wire 1 1) cin $end
$var wire 1 2) cout $end
$var wire 1 3) sum $end
$var wire 1 4) w1 $end
$var wire 1 5) w2 $end
$var wire 1 6) w3 $end
$upscope $end
$upscope $end
$scope begin gen[4] $end
$var parameter 4 7) i $end
$scope module fs $end
$var wire 1 8) a $end
$var wire 1 9) b $end
$var wire 1 :) cin $end
$var wire 1 ;) cout $end
$var wire 1 <) sum $end
$var wire 1 =) w1 $end
$var wire 1 >) w2 $end
$var wire 1 ?) w3 $end
$upscope $end
$upscope $end
$scope begin gen[5] $end
$var parameter 4 @) i $end
$scope module fs $end
$var wire 1 A) a $end
$var wire 1 B) b $end
$var wire 1 C) cin $end
$var wire 1 D) cout $end
$var wire 1 E) sum $end
$var wire 1 F) w1 $end
$var wire 1 G) w2 $end
$var wire 1 H) w3 $end
$upscope $end
$upscope $end
$scope begin gen[6] $end
$var parameter 4 I) i $end
$scope module fs $end
$var wire 1 J) a $end
$var wire 1 K) b $end
$var wire 1 L) cin $end
$var wire 1 M) cout $end
$var wire 1 N) sum $end
$var wire 1 O) w1 $end
$var wire 1 P) w2 $end
$var wire 1 Q) w3 $end
$upscope $end
$upscope $end
$scope begin gen[7] $end
$var parameter 4 R) i $end
$scope module fs $end
$var wire 1 S) a $end
$var wire 1 T) b $end
$var wire 1 U) cin $end
$var wire 1 V) cout $end
$var wire 1 W) sum $end
$var wire 1 X) w1 $end
$var wire 1 Y) w2 $end
$var wire 1 Z) w3 $end
$upscope $end
$upscope $end
$scope begin gen[8] $end
$var parameter 5 [) i $end
$scope module fs $end
$var wire 1 \) a $end
$var wire 1 ]) b $end
$var wire 1 ^) cin $end
$var wire 1 _) cout $end
$var wire 1 `) sum $end
$var wire 1 a) w1 $end
$var wire 1 b) w2 $end
$var wire 1 c) w3 $end
$upscope $end
$upscope $end
$scope begin gen[9] $end
$var parameter 5 d) i $end
$scope module fs $end
$var wire 1 e) a $end
$var wire 1 f) b $end
$var wire 1 g) cin $end
$var wire 1 h) cout $end
$var wire 1 i) sum $end
$var wire 1 j) w1 $end
$var wire 1 k) w2 $end
$var wire 1 l) w3 $end
$upscope $end
$upscope $end
$scope begin gen[10] $end
$var parameter 5 m) i $end
$scope module fs $end
$var wire 1 n) a $end
$var wire 1 o) b $end
$var wire 1 p) cin $end
$var wire 1 q) cout $end
$var wire 1 r) sum $end
$var wire 1 s) w1 $end
$var wire 1 t) w2 $end
$var wire 1 u) w3 $end
$upscope $end
$upscope $end
$scope begin gen[11] $end
$var parameter 5 v) i $end
$scope module fs $end
$var wire 1 w) a $end
$var wire 1 x) b $end
$var wire 1 y) cin $end
$var wire 1 z) cout $end
$var wire 1 {) sum $end
$var wire 1 |) w1 $end
$var wire 1 }) w2 $end
$var wire 1 ~) w3 $end
$upscope $end
$upscope $end
$scope begin gen[12] $end
$var parameter 5 !* i $end
$scope module fs $end
$var wire 1 "* a $end
$var wire 1 #* b $end
$var wire 1 $* cin $end
$var wire 1 %* cout $end
$var wire 1 &* sum $end
$var wire 1 '* w1 $end
$var wire 1 (* w2 $end
$var wire 1 )* w3 $end
$upscope $end
$upscope $end
$scope begin gen[13] $end
$var parameter 5 ** i $end
$scope module fs $end
$var wire 1 +* a $end
$var wire 1 ,* b $end
$var wire 1 -* cin $end
$var wire 1 .* cout $end
$var wire 1 /* sum $end
$var wire 1 0* w1 $end
$var wire 1 1* w2 $end
$var wire 1 2* w3 $end
$upscope $end
$upscope $end
$scope begin gen[14] $end
$var parameter 5 3* i $end
$scope module fs $end
$var wire 1 4* a $end
$var wire 1 5* b $end
$var wire 1 6* cin $end
$var wire 1 7* cout $end
$var wire 1 8* sum $end
$var wire 1 9* w1 $end
$var wire 1 :* w2 $end
$var wire 1 ;* w3 $end
$upscope $end
$upscope $end
$scope begin gen[15] $end
$var parameter 5 <* i $end
$scope module fs $end
$var wire 1 =* a $end
$var wire 1 >* b $end
$var wire 1 ?* cin $end
$var wire 1 @* cout $end
$var wire 1 A* sum $end
$var wire 1 B* w1 $end
$var wire 1 C* w2 $end
$var wire 1 D* w3 $end
$upscope $end
$upscope $end
$scope begin gen[16] $end
$var parameter 6 E* i $end
$scope module fs $end
$var wire 1 F* a $end
$var wire 1 G* b $end
$var wire 1 H* cin $end
$var wire 1 I* cout $end
$var wire 1 J* sum $end
$var wire 1 K* w1 $end
$var wire 1 L* w2 $end
$var wire 1 M* w3 $end
$upscope $end
$upscope $end
$scope begin gen[17] $end
$var parameter 6 N* i $end
$scope module fs $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 R* cout $end
$var wire 1 S* sum $end
$var wire 1 T* w1 $end
$var wire 1 U* w2 $end
$var wire 1 V* w3 $end
$upscope $end
$upscope $end
$scope begin gen[18] $end
$var parameter 6 W* i $end
$scope module fs $end
$var wire 1 X* a $end
$var wire 1 Y* b $end
$var wire 1 Z* cin $end
$var wire 1 [* cout $end
$var wire 1 \* sum $end
$var wire 1 ]* w1 $end
$var wire 1 ^* w2 $end
$var wire 1 _* w3 $end
$upscope $end
$upscope $end
$scope begin gen[19] $end
$var parameter 6 `* i $end
$scope module fs $end
$var wire 1 a* a $end
$var wire 1 b* b $end
$var wire 1 c* cin $end
$var wire 1 d* cout $end
$var wire 1 e* sum $end
$var wire 1 f* w1 $end
$var wire 1 g* w2 $end
$var wire 1 h* w3 $end
$upscope $end
$upscope $end
$scope begin gen[20] $end
$var parameter 6 i* i $end
$scope module fs $end
$var wire 1 j* a $end
$var wire 1 k* b $end
$var wire 1 l* cin $end
$var wire 1 m* cout $end
$var wire 1 n* sum $end
$var wire 1 o* w1 $end
$var wire 1 p* w2 $end
$var wire 1 q* w3 $end
$upscope $end
$upscope $end
$scope begin gen[21] $end
$var parameter 6 r* i $end
$scope module fs $end
$var wire 1 s* a $end
$var wire 1 t* b $end
$var wire 1 u* cin $end
$var wire 1 v* cout $end
$var wire 1 w* sum $end
$var wire 1 x* w1 $end
$var wire 1 y* w2 $end
$var wire 1 z* w3 $end
$upscope $end
$upscope $end
$scope begin gen[22] $end
$var parameter 6 {* i $end
$scope module fs $end
$var wire 1 |* a $end
$var wire 1 }* b $end
$var wire 1 ~* cin $end
$var wire 1 !+ cout $end
$var wire 1 "+ sum $end
$var wire 1 #+ w1 $end
$var wire 1 $+ w2 $end
$var wire 1 %+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[23] $end
$var parameter 6 &+ i $end
$scope module fs $end
$var wire 1 '+ a $end
$var wire 1 (+ b $end
$var wire 1 )+ cin $end
$var wire 1 *+ cout $end
$var wire 1 ++ sum $end
$var wire 1 ,+ w1 $end
$var wire 1 -+ w2 $end
$var wire 1 .+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[24] $end
$var parameter 6 /+ i $end
$scope module fs $end
$var wire 1 0+ a $end
$var wire 1 1+ b $end
$var wire 1 2+ cin $end
$var wire 1 3+ cout $end
$var wire 1 4+ sum $end
$var wire 1 5+ w1 $end
$var wire 1 6+ w2 $end
$var wire 1 7+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[25] $end
$var parameter 6 8+ i $end
$scope module fs $end
$var wire 1 9+ a $end
$var wire 1 :+ b $end
$var wire 1 ;+ cin $end
$var wire 1 <+ cout $end
$var wire 1 =+ sum $end
$var wire 1 >+ w1 $end
$var wire 1 ?+ w2 $end
$var wire 1 @+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[26] $end
$var parameter 6 A+ i $end
$scope module fs $end
$var wire 1 B+ a $end
$var wire 1 C+ b $end
$var wire 1 D+ cin $end
$var wire 1 E+ cout $end
$var wire 1 F+ sum $end
$var wire 1 G+ w1 $end
$var wire 1 H+ w2 $end
$var wire 1 I+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[27] $end
$var parameter 6 J+ i $end
$scope module fs $end
$var wire 1 K+ a $end
$var wire 1 L+ b $end
$var wire 1 M+ cin $end
$var wire 1 N+ cout $end
$var wire 1 O+ sum $end
$var wire 1 P+ w1 $end
$var wire 1 Q+ w2 $end
$var wire 1 R+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[28] $end
$var parameter 6 S+ i $end
$scope module fs $end
$var wire 1 T+ a $end
$var wire 1 U+ b $end
$var wire 1 V+ cin $end
$var wire 1 W+ cout $end
$var wire 1 X+ sum $end
$var wire 1 Y+ w1 $end
$var wire 1 Z+ w2 $end
$var wire 1 [+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[29] $end
$var parameter 6 \+ i $end
$scope module fs $end
$var wire 1 ]+ a $end
$var wire 1 ^+ b $end
$var wire 1 _+ cin $end
$var wire 1 `+ cout $end
$var wire 1 a+ sum $end
$var wire 1 b+ w1 $end
$var wire 1 c+ w2 $end
$var wire 1 d+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[30] $end
$var parameter 6 e+ i $end
$scope module fs $end
$var wire 1 f+ a $end
$var wire 1 g+ b $end
$var wire 1 h+ cin $end
$var wire 1 i+ cout $end
$var wire 1 j+ sum $end
$var wire 1 k+ w1 $end
$var wire 1 l+ w2 $end
$var wire 1 m+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[31] $end
$var parameter 6 n+ i $end
$scope module fs $end
$var wire 1 o+ a $end
$var wire 1 p+ b $end
$var wire 1 q+ cin $end
$var wire 1 r+ cout $end
$var wire 1 s+ sum $end
$var wire 1 t+ w1 $end
$var wire 1 u+ w2 $end
$var wire 1 v+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[32] $end
$var parameter 7 w+ i $end
$scope module fs $end
$var wire 1 x+ a $end
$var wire 1 y+ b $end
$var wire 1 z+ cin $end
$var wire 1 {+ cout $end
$var wire 1 |+ sum $end
$var wire 1 }+ w1 $end
$var wire 1 ~+ w2 $end
$var wire 1 !, w3 $end
$upscope $end
$upscope $end
$scope begin gen[33] $end
$var parameter 7 ", i $end
$scope module fs $end
$var wire 1 #, a $end
$var wire 1 $, b $end
$var wire 1 %, cin $end
$var wire 1 &, cout $end
$var wire 1 ', sum $end
$var wire 1 (, w1 $end
$var wire 1 ), w2 $end
$var wire 1 *, w3 $end
$upscope $end
$upscope $end
$scope begin gen[34] $end
$var parameter 7 +, i $end
$scope module fs $end
$var wire 1 ,, a $end
$var wire 1 -, b $end
$var wire 1 ., cin $end
$var wire 1 /, cout $end
$var wire 1 0, sum $end
$var wire 1 1, w1 $end
$var wire 1 2, w2 $end
$var wire 1 3, w3 $end
$upscope $end
$upscope $end
$scope begin gen[35] $end
$var parameter 7 4, i $end
$scope module fs $end
$var wire 1 5, a $end
$var wire 1 6, b $end
$var wire 1 7, cin $end
$var wire 1 8, cout $end
$var wire 1 9, sum $end
$var wire 1 :, w1 $end
$var wire 1 ;, w2 $end
$var wire 1 <, w3 $end
$upscope $end
$upscope $end
$scope begin gen[36] $end
$var parameter 7 =, i $end
$scope module fs $end
$var wire 1 >, a $end
$var wire 1 ?, b $end
$var wire 1 @, cin $end
$var wire 1 A, cout $end
$var wire 1 B, sum $end
$var wire 1 C, w1 $end
$var wire 1 D, w2 $end
$var wire 1 E, w3 $end
$upscope $end
$upscope $end
$scope begin gen[37] $end
$var parameter 7 F, i $end
$scope module fs $end
$var wire 1 G, a $end
$var wire 1 H, b $end
$var wire 1 I, cin $end
$var wire 1 J, cout $end
$var wire 1 K, sum $end
$var wire 1 L, w1 $end
$var wire 1 M, w2 $end
$var wire 1 N, w3 $end
$upscope $end
$upscope $end
$scope begin gen[38] $end
$var parameter 7 O, i $end
$scope module fs $end
$var wire 1 P, a $end
$var wire 1 Q, b $end
$var wire 1 R, cin $end
$var wire 1 S, cout $end
$var wire 1 T, sum $end
$var wire 1 U, w1 $end
$var wire 1 V, w2 $end
$var wire 1 W, w3 $end
$upscope $end
$upscope $end
$scope begin gen[39] $end
$var parameter 7 X, i $end
$scope module fs $end
$var wire 1 Y, a $end
$var wire 1 Z, b $end
$var wire 1 [, cin $end
$var wire 1 \, cout $end
$var wire 1 ], sum $end
$var wire 1 ^, w1 $end
$var wire 1 _, w2 $end
$var wire 1 `, w3 $end
$upscope $end
$upscope $end
$scope begin gen[40] $end
$var parameter 7 a, i $end
$scope module fs $end
$var wire 1 b, a $end
$var wire 1 c, b $end
$var wire 1 d, cin $end
$var wire 1 e, cout $end
$var wire 1 f, sum $end
$var wire 1 g, w1 $end
$var wire 1 h, w2 $end
$var wire 1 i, w3 $end
$upscope $end
$upscope $end
$scope begin gen[41] $end
$var parameter 7 j, i $end
$scope module fs $end
$var wire 1 k, a $end
$var wire 1 l, b $end
$var wire 1 m, cin $end
$var wire 1 n, cout $end
$var wire 1 o, sum $end
$var wire 1 p, w1 $end
$var wire 1 q, w2 $end
$var wire 1 r, w3 $end
$upscope $end
$upscope $end
$scope begin gen[42] $end
$var parameter 7 s, i $end
$scope module fs $end
$var wire 1 t, a $end
$var wire 1 u, b $end
$var wire 1 v, cin $end
$var wire 1 w, cout $end
$var wire 1 x, sum $end
$var wire 1 y, w1 $end
$var wire 1 z, w2 $end
$var wire 1 {, w3 $end
$upscope $end
$upscope $end
$scope begin gen[43] $end
$var parameter 7 |, i $end
$scope module fs $end
$var wire 1 }, a $end
$var wire 1 ~, b $end
$var wire 1 !- cin $end
$var wire 1 "- cout $end
$var wire 1 #- sum $end
$var wire 1 $- w1 $end
$var wire 1 %- w2 $end
$var wire 1 &- w3 $end
$upscope $end
$upscope $end
$scope begin gen[44] $end
$var parameter 7 '- i $end
$scope module fs $end
$var wire 1 (- a $end
$var wire 1 )- b $end
$var wire 1 *- cin $end
$var wire 1 +- cout $end
$var wire 1 ,- sum $end
$var wire 1 -- w1 $end
$var wire 1 .- w2 $end
$var wire 1 /- w3 $end
$upscope $end
$upscope $end
$scope begin gen[45] $end
$var parameter 7 0- i $end
$scope module fs $end
$var wire 1 1- a $end
$var wire 1 2- b $end
$var wire 1 3- cin $end
$var wire 1 4- cout $end
$var wire 1 5- sum $end
$var wire 1 6- w1 $end
$var wire 1 7- w2 $end
$var wire 1 8- w3 $end
$upscope $end
$upscope $end
$scope begin gen[46] $end
$var parameter 7 9- i $end
$scope module fs $end
$var wire 1 :- a $end
$var wire 1 ;- b $end
$var wire 1 <- cin $end
$var wire 1 =- cout $end
$var wire 1 >- sum $end
$var wire 1 ?- w1 $end
$var wire 1 @- w2 $end
$var wire 1 A- w3 $end
$upscope $end
$upscope $end
$scope begin gen[47] $end
$var parameter 7 B- i $end
$scope module fs $end
$var wire 1 C- a $end
$var wire 1 D- b $end
$var wire 1 E- cin $end
$var wire 1 F- cout $end
$var wire 1 G- sum $end
$var wire 1 H- w1 $end
$var wire 1 I- w2 $end
$var wire 1 J- w3 $end
$upscope $end
$upscope $end
$scope begin gen[48] $end
$var parameter 7 K- i $end
$scope module fs $end
$var wire 1 L- a $end
$var wire 1 M- b $end
$var wire 1 N- cin $end
$var wire 1 O- cout $end
$var wire 1 P- sum $end
$var wire 1 Q- w1 $end
$var wire 1 R- w2 $end
$var wire 1 S- w3 $end
$upscope $end
$upscope $end
$scope begin gen[49] $end
$var parameter 7 T- i $end
$scope module fs $end
$var wire 1 U- a $end
$var wire 1 V- b $end
$var wire 1 W- cin $end
$var wire 1 X- cout $end
$var wire 1 Y- sum $end
$var wire 1 Z- w1 $end
$var wire 1 [- w2 $end
$var wire 1 \- w3 $end
$upscope $end
$upscope $end
$scope begin gen[50] $end
$var parameter 7 ]- i $end
$scope module fs $end
$var wire 1 ^- a $end
$var wire 1 _- b $end
$var wire 1 `- cin $end
$var wire 1 a- cout $end
$var wire 1 b- sum $end
$var wire 1 c- w1 $end
$var wire 1 d- w2 $end
$var wire 1 e- w3 $end
$upscope $end
$upscope $end
$scope begin gen[51] $end
$var parameter 7 f- i $end
$scope module fs $end
$var wire 1 g- a $end
$var wire 1 h- b $end
$var wire 1 i- cin $end
$var wire 1 j- cout $end
$var wire 1 k- sum $end
$var wire 1 l- w1 $end
$var wire 1 m- w2 $end
$var wire 1 n- w3 $end
$upscope $end
$upscope $end
$scope begin gen[52] $end
$var parameter 7 o- i $end
$scope module fs $end
$var wire 1 p- a $end
$var wire 1 q- b $end
$var wire 1 r- cin $end
$var wire 1 s- cout $end
$var wire 1 t- sum $end
$var wire 1 u- w1 $end
$var wire 1 v- w2 $end
$var wire 1 w- w3 $end
$upscope $end
$upscope $end
$scope begin gen[53] $end
$var parameter 7 x- i $end
$scope module fs $end
$var wire 1 y- a $end
$var wire 1 z- b $end
$var wire 1 {- cin $end
$var wire 1 |- cout $end
$var wire 1 }- sum $end
$var wire 1 ~- w1 $end
$var wire 1 !. w2 $end
$var wire 1 ". w3 $end
$upscope $end
$upscope $end
$scope begin gen[54] $end
$var parameter 7 #. i $end
$scope module fs $end
$var wire 1 $. a $end
$var wire 1 %. b $end
$var wire 1 &. cin $end
$var wire 1 '. cout $end
$var wire 1 (. sum $end
$var wire 1 ). w1 $end
$var wire 1 *. w2 $end
$var wire 1 +. w3 $end
$upscope $end
$upscope $end
$scope begin gen[55] $end
$var parameter 7 ,. i $end
$scope module fs $end
$var wire 1 -. a $end
$var wire 1 .. b $end
$var wire 1 /. cin $end
$var wire 1 0. cout $end
$var wire 1 1. sum $end
$var wire 1 2. w1 $end
$var wire 1 3. w2 $end
$var wire 1 4. w3 $end
$upscope $end
$upscope $end
$scope begin gen[56] $end
$var parameter 7 5. i $end
$scope module fs $end
$var wire 1 6. a $end
$var wire 1 7. b $end
$var wire 1 8. cin $end
$var wire 1 9. cout $end
$var wire 1 :. sum $end
$var wire 1 ;. w1 $end
$var wire 1 <. w2 $end
$var wire 1 =. w3 $end
$upscope $end
$upscope $end
$scope begin gen[57] $end
$var parameter 7 >. i $end
$scope module fs $end
$var wire 1 ?. a $end
$var wire 1 @. b $end
$var wire 1 A. cin $end
$var wire 1 B. cout $end
$var wire 1 C. sum $end
$var wire 1 D. w1 $end
$var wire 1 E. w2 $end
$var wire 1 F. w3 $end
$upscope $end
$upscope $end
$scope begin gen[58] $end
$var parameter 7 G. i $end
$scope module fs $end
$var wire 1 H. a $end
$var wire 1 I. b $end
$var wire 1 J. cin $end
$var wire 1 K. cout $end
$var wire 1 L. sum $end
$var wire 1 M. w1 $end
$var wire 1 N. w2 $end
$var wire 1 O. w3 $end
$upscope $end
$upscope $end
$scope begin gen[59] $end
$var parameter 7 P. i $end
$scope module fs $end
$var wire 1 Q. a $end
$var wire 1 R. b $end
$var wire 1 S. cin $end
$var wire 1 T. cout $end
$var wire 1 U. sum $end
$var wire 1 V. w1 $end
$var wire 1 W. w2 $end
$var wire 1 X. w3 $end
$upscope $end
$upscope $end
$scope begin gen[60] $end
$var parameter 7 Y. i $end
$scope module fs $end
$var wire 1 Z. a $end
$var wire 1 [. b $end
$var wire 1 \. cin $end
$var wire 1 ]. cout $end
$var wire 1 ^. sum $end
$var wire 1 _. w1 $end
$var wire 1 `. w2 $end
$var wire 1 a. w3 $end
$upscope $end
$upscope $end
$scope begin gen[61] $end
$var parameter 7 b. i $end
$scope module fs $end
$var wire 1 c. a $end
$var wire 1 d. b $end
$var wire 1 e. cin $end
$var wire 1 f. cout $end
$var wire 1 g. sum $end
$var wire 1 h. w1 $end
$var wire 1 i. w2 $end
$var wire 1 j. w3 $end
$upscope $end
$upscope $end
$scope begin gen[62] $end
$var parameter 7 k. i $end
$scope module fs $end
$var wire 1 l. a $end
$var wire 1 m. b $end
$var wire 1 n. cin $end
$var wire 1 o. cout $end
$var wire 1 p. sum $end
$var wire 1 q. w1 $end
$var wire 1 r. w2 $end
$var wire 1 s. w3 $end
$upscope $end
$upscope $end
$scope begin gen[63] $end
$var parameter 7 t. i $end
$scope module fs $end
$var wire 1 u. a $end
$var wire 1 v. b $end
$var wire 1 w. cin $end
$var wire 1 x. cout $end
$var wire 1 y. sum $end
$var wire 1 z. w1 $end
$var wire 1 {. w2 $end
$var wire 1 |. w3 $end
$upscope $end
$upscope $end
$scope module ovf $end
$var wire 1 }. a_sign $end
$var wire 1 ~. b_sign $end
$var wire 1 !/ diff_sign $end
$var wire 1 / overflow $end
$var wire 1 "/ w1 $end
$var wire 1 #/ w2 $end
$upscope $end
$upscope $end
$upscope $end
$scope task display_result $end
$var reg 64 $/ a [63:0] $end
$var reg 64 %/ b [63:0] $end
$var reg 4 &/ control [3:0] $end
$var reg 1 '/ expected_overflow $end
$var reg 64 (/ expected_result [63:0] $end
$var reg 1 )/ expected_zero $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111111 t.
b111110 k.
b111101 b.
b111100 Y.
b111011 P.
b111010 G.
b111001 >.
b111000 5.
b110111 ,.
b110110 #.
b110101 x-
b110100 o-
b110011 f-
b110010 ]-
b110001 T-
b110000 K-
b101111 B-
b101110 9-
b101101 0-
b101100 '-
b101011 |,
b101010 s,
b101001 j,
b101000 a,
b100111 X,
b100110 O,
b100101 F,
b100100 =,
b100011 4,
b100010 +,
b100001 ",
b100000 w+
b11111 n+
b11110 e+
b11101 \+
b11100 S+
b11011 J+
b11010 A+
b11001 8+
b11000 /+
b10111 &+
b10110 {*
b10101 r*
b10100 i*
b10011 `*
b10010 W*
b10001 N*
b10000 E*
b1111 <*
b1110 3*
b1101 **
b1100 !*
b1011 v)
b1010 m)
b1001 d)
b1000 [)
b111 R)
b110 I)
b101 @)
b100 7)
b11 .)
b10 %)
b1 z(
b0 q(
b111111 k(
b111110 j(
b111101 i(
b111100 h(
b111011 g(
b111010 f(
b111001 e(
b111000 d(
b110111 c(
b110110 b(
b110101 a(
b110100 `(
b110011 _(
b110010 ^(
b110001 ](
b110000 \(
b101111 [(
b101110 Z(
b101101 Y(
b101100 X(
b101011 W(
b101010 V(
b101001 U(
b101000 T(
b100111 S(
b100110 R(
b100101 Q(
b100100 P(
b100011 O(
b100010 N(
b100001 M(
b100000 L(
b11111 K(
b11110 J(
b11101 I(
b11100 H(
b11011 G(
b11010 F(
b11001 E(
b11000 D(
b10111 C(
b10110 B(
b10101 A(
b10100 @(
b10011 ?(
b10010 >(
b10001 =(
b10000 <(
b1111 ;(
b1110 :(
b1101 9(
b1100 8(
b1011 7(
b1010 6(
b1001 5(
b1000 4(
b111 3(
b110 2(
b101 1(
b100 0(
b11 /(
b10 .(
b1 -(
b0 ,(
b111111 ((
b111110 '(
b111101 &(
b111100 %(
b111011 $(
b111010 #(
b111001 "(
b111000 !(
b110111 ~'
b110110 }'
b110101 |'
b110100 {'
b110011 z'
b110010 y'
b110001 x'
b110000 w'
b101111 v'
b101110 u'
b101101 t'
b101100 s'
b101011 r'
b101010 q'
b101001 p'
b101000 o'
b100111 n'
b100110 m'
b100101 l'
b100100 k'
b100011 j'
b100010 i'
b100001 h'
b100000 g'
b11111 f'
b11110 e'
b11101 d'
b11100 c'
b11011 b'
b11010 a'
b11001 `'
b11000 _'
b10111 ^'
b10110 ]'
b10101 \'
b10100 ['
b10011 Z'
b10010 Y'
b10001 X'
b10000 W'
b1111 V'
b1110 U'
b1101 T'
b1100 S'
b1011 R'
b1010 Q'
b1001 P'
b1000 O'
b111 N'
b110 M'
b101 L'
b100 K'
b11 J'
b10 I'
b1 H'
b0 G'
b111111 ;'
b111110 2'
b111101 )'
b111100 ~&
b111011 u&
b111010 l&
b111001 c&
b111000 Z&
b110111 Q&
b110110 H&
b110101 ?&
b110100 6&
b110011 -&
b110010 $&
b110001 y%
b110000 p%
b101111 g%
b101110 ^%
b101101 U%
b101100 L%
b101011 C%
b101010 :%
b101001 1%
b101000 (%
b100111 }$
b100110 t$
b100101 k$
b100100 b$
b100011 Y$
b100010 P$
b100001 G$
b100000 >$
b11111 5$
b11110 ,$
b11101 #$
b11100 x#
b11011 o#
b11010 f#
b11001 ]#
b11000 T#
b10111 K#
b10110 B#
b10101 9#
b10100 0#
b10011 '#
b10010 |"
b10001 s"
b10000 j"
b1111 a"
b1110 X"
b1101 O"
b1100 F"
b1011 ="
b1010 4"
b1001 +"
b1000 ""
b111 w
b110 n
b101 e
b100 \
b11 S
b10 J
b1 A
b0 8
$end
#0
$dumpvars
x)/
bx (/
x'/
bx &/
bx %/
bx $/
0#/
0"/
1!/
0~.
0}.
0|.
0{.
1z.
1y.
0x.
0w.
1v.
0u.
0s.
0r.
1q.
1p.
0o.
0n.
1m.
0l.
0j.
0i.
1h.
1g.
0f.
0e.
1d.
0c.
0a.
0`.
1_.
1^.
0].
0\.
1[.
0Z.
0X.
0W.
1V.
1U.
0T.
0S.
1R.
0Q.
0O.
0N.
1M.
1L.
0K.
0J.
1I.
0H.
0F.
0E.
1D.
1C.
0B.
0A.
1@.
0?.
0=.
0<.
1;.
1:.
09.
08.
17.
06.
04.
03.
12.
11.
00.
0/.
1..
0-.
0+.
0*.
1).
1(.
0'.
0&.
1%.
0$.
0".
0!.
1~-
1}-
0|-
0{-
1z-
0y-
0w-
0v-
1u-
1t-
0s-
0r-
1q-
0p-
0n-
0m-
1l-
1k-
0j-
0i-
1h-
0g-
0e-
0d-
1c-
1b-
0a-
0`-
1_-
0^-
0\-
0[-
1Z-
1Y-
0X-
0W-
1V-
0U-
0S-
0R-
1Q-
1P-
0O-
0N-
1M-
0L-
0J-
0I-
1H-
1G-
0F-
0E-
1D-
0C-
0A-
0@-
1?-
1>-
0=-
0<-
1;-
0:-
08-
07-
16-
15-
04-
03-
12-
01-
0/-
0.-
1--
1,-
0+-
0*-
1)-
0(-
0&-
0%-
1$-
1#-
0"-
0!-
1~,
0},
0{,
0z,
1y,
1x,
0w,
0v,
1u,
0t,
0r,
0q,
1p,
1o,
0n,
0m,
1l,
0k,
0i,
0h,
1g,
1f,
0e,
0d,
1c,
0b,
0`,
0_,
1^,
1],
0\,
0[,
1Z,
0Y,
0W,
0V,
1U,
1T,
0S,
0R,
1Q,
0P,
0N,
0M,
1L,
1K,
0J,
0I,
1H,
0G,
0E,
0D,
1C,
1B,
0A,
0@,
1?,
0>,
0<,
0;,
1:,
19,
08,
07,
16,
05,
03,
02,
11,
10,
0/,
0.,
1-,
0,,
0*,
0),
1(,
1',
0&,
0%,
1$,
0#,
0!,
0~+
1}+
1|+
0{+
0z+
1y+
0x+
0v+
0u+
1t+
1s+
0r+
0q+
1p+
0o+
0m+
0l+
1k+
1j+
0i+
0h+
1g+
0f+
0d+
0c+
1b+
1a+
0`+
0_+
1^+
0]+
0[+
0Z+
1Y+
1X+
0W+
0V+
1U+
0T+
0R+
0Q+
1P+
1O+
0N+
0M+
1L+
0K+
0I+
0H+
1G+
1F+
0E+
0D+
1C+
0B+
0@+
0?+
1>+
1=+
0<+
0;+
1:+
09+
07+
06+
15+
14+
03+
02+
11+
00+
0.+
0-+
1,+
1++
0*+
0)+
1(+
0'+
0%+
0$+
1#+
1"+
0!+
0~*
1}*
0|*
0z*
0y*
1x*
1w*
0v*
0u*
1t*
0s*
0q*
0p*
1o*
1n*
0m*
0l*
1k*
0j*
0h*
0g*
1f*
1e*
0d*
0c*
1b*
0a*
0_*
0^*
1]*
1\*
0[*
0Z*
1Y*
0X*
0V*
0U*
1T*
1S*
0R*
0Q*
1P*
0O*
0M*
0L*
1K*
1J*
0I*
0H*
1G*
0F*
0D*
0C*
1B*
1A*
0@*
0?*
1>*
0=*
0;*
0:*
19*
18*
07*
06*
15*
04*
02*
01*
10*
1/*
0.*
0-*
1,*
0+*
0)*
0(*
1'*
1&*
0%*
0$*
1#*
0"*
0~)
0})
1|)
1{)
0z)
0y)
1x)
0w)
0u)
0t)
1s)
1r)
0q)
0p)
1o)
0n)
0l)
0k)
1j)
1i)
0h)
0g)
1f)
0e)
0c)
0b)
1a)
1`)
0_)
0^)
1])
0\)
0Z)
0Y)
1X)
1W)
0V)
0U)
1T)
0S)
0Q)
0P)
1O)
1N)
0M)
0L)
1K)
0J)
0H)
0G)
1F)
1E)
0D)
0C)
1B)
0A)
0?)
0>)
1=)
1<)
0;)
0:)
19)
08)
06)
05)
04)
03)
02)
01)
00)
0/)
0-)
0,)
1+)
1*)
0))
0()
1')
0&)
0$)
0#)
0")
1!)
0~(
1}(
0|(
0{(
1y(
0x(
1w(
0v(
1u(
1t(
1s(
0r(
b11 p(
b1111111111111111111111111111111111111111111111111111111111110110 o(
1n(
b1010 m(
b0 l(
b1010 +(
b1010 *(
b0 )(
b0 F'
b1010 E'
b0 D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0:'
09'
08'
07'
06'
05'
04'
03'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
05&
04&
03&
02&
01&
00&
0/&
0.&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
09%
08%
07%
06%
05%
04%
03%
02%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
08#
07#
06#
05#
04#
03#
02#
01#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0<"
0;"
0:"
09"
08"
07"
06"
05"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0!"
0~
0}
0|
0{
0z
0y
0x
0v
0u
0t
0s
0r
0q
0p
0o
0m
0l
0k
0j
0i
0h
0g
0f
0d
0c
0b
0a
0`
0_
0^
0]
0[
0Z
1Y
1X
0W
0V
1U
0T
0R
0Q
0P
0O
0N
0M
0L
0K
0I
0H
1G
1F
0E
0D
1C
0B
0@
0?
0>
0=
0<
0;
0:
09
b0 7
b1010 6
05
b1010 4
b0 3
b1111111111111111111111111111111111111111111111111111111111110110 2
b0 1
00
0/
b1111111111111111111111111111111111111111111111111111111111110110 .
b1010 -
0,
0+
b1010 *
b1010 )
b0 (
b1 '
b1010 &
b0 %
b1 $
0#
b1111111111111111111111111111111111111111111111111111111111110110 "
0!
$end
#10000
0'/
0)/
b10100 (/
b1 &/
b1010 %/
b0 $/
#20000
