$date
	Thu Mar  6 11:07:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_tb $end
$var reg 1 ! clk $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " zero $end
$var wire 64 # write_data [63:0] $end
$var wire 1 $ reg_write $end
$var wire 64 % read_data [63:0] $end
$var wire 1 & overflow $end
$var wire 32 ' instruction [31:0] $end
$var wire 64 ( imm64 [63:0] $end
$var wire 5 ) ifid_rs2 [4:0] $end
$var wire 5 * ifid_rd [4:0] $end
$var wire 64 + Rs2 [63:0] $end
$var wire 1 , MemtoReg $end
$var wire 1 - MemWrite $end
$var wire 1 . MemRead $end
$var wire 1 / Branch $end
$var wire 4 0 Aluctrl_input [3:0] $end
$var wire 64 1 ALU_output [63:0] $end
$var wire 1 2 ALUSrc $end
$var wire 2 3 ALUOp [1:0] $end
$var wire 4 4 ALUCtrl1 [3:0] $end
$var reg 64 5 ALU_result [63:0] $end
$var reg 1 6 Alu_ctrl $end
$var reg 64 7 Data_from_ALU [63:0] $end
$var reg 64 8 Data_from_memory [63:0] $end
$var reg 64 9 Data_to_write [63:0] $end
$var reg 1 : EX2 $end
$var reg 32 ; IFID_Instruction [31:0] $end
$var reg 5 < IFID_rd [4:0] $end
$var reg 5 = IFID_rs1 [4:0] $end
$var reg 5 > IFID_rs2 [4:0] $end
$var reg 1 ? M2 $end
$var reg 1 @ M3 $end
$var reg 64 A PC [63:0] $end
$var reg 1 B WB2 $end
$var reg 1 C WB3 $end
$var reg 1 D WB4 $end
$var reg 5 E rd3 [4:0] $end
$var reg 5 F rd4 [4:0] $end
$var reg 64 G rs1 [63:0] $end
$var reg 64 H rs2 [63:0] $end
$scope module alu $end
$var wire 64 I a [63:0] $end
$var wire 64 J b [63:0] $end
$var wire 64 K sum_result [63:0] $end
$var wire 1 L sum_overflow $end
$var wire 1 M sum_cout $end
$var wire 64 N or_result [63:0] $end
$var wire 64 O diff_result [63:0] $end
$var wire 1 P diff_overflow $end
$var wire 1 Q diff_cout $end
$var wire 64 R and_result [63:0] $end
$var wire 4 S Alu_control [3:0] $end
$var reg 1 & overflow $end
$var reg 64 T result [63:0] $end
$var reg 1 " zero $end
$scope module adder $end
$var wire 64 U a [63:0] $end
$var wire 64 V b [63:0] $end
$var wire 1 W cin $end
$var wire 1 L overflow $end
$var wire 64 X sum [63:0] $end
$var wire 1 M cout $end
$var wire 65 Y c [64:0] $end
$scope begin gen[0] $end
$scope module fa $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ cin $end
$var wire 1 ] cout $end
$var wire 1 ^ sum $end
$var wire 1 _ w1 $end
$var wire 1 ` w2 $end
$var wire 1 a w3 $end
$upscope $end
$upscope $end
$scope begin gen[1] $end
$scope module fa $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f sum $end
$var wire 1 g w1 $end
$var wire 1 h w2 $end
$var wire 1 i w3 $end
$upscope $end
$upscope $end
$scope begin gen[2] $end
$scope module fa $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cin $end
$var wire 1 m cout $end
$var wire 1 n sum $end
$var wire 1 o w1 $end
$var wire 1 p w2 $end
$var wire 1 q w3 $end
$upscope $end
$upscope $end
$scope begin gen[3] $end
$scope module fa $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t cin $end
$var wire 1 u cout $end
$var wire 1 v sum $end
$var wire 1 w w1 $end
$var wire 1 x w2 $end
$var wire 1 y w3 $end
$upscope $end
$upscope $end
$scope begin gen[4] $end
$scope module fa $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$var wire 1 !" w1 $end
$var wire 1 "" w2 $end
$var wire 1 #" w3 $end
$upscope $end
$upscope $end
$scope begin gen[5] $end
$scope module fa $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cin $end
$var wire 1 '" cout $end
$var wire 1 (" sum $end
$var wire 1 )" w1 $end
$var wire 1 *" w2 $end
$var wire 1 +" w3 $end
$upscope $end
$upscope $end
$scope begin gen[6] $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" sum $end
$var wire 1 1" w1 $end
$var wire 1 2" w2 $end
$var wire 1 3" w3 $end
$upscope $end
$upscope $end
$scope begin gen[7] $end
$scope module fa $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" cin $end
$var wire 1 7" cout $end
$var wire 1 8" sum $end
$var wire 1 9" w1 $end
$var wire 1 :" w2 $end
$var wire 1 ;" w3 $end
$upscope $end
$upscope $end
$scope begin gen[8] $end
$scope module fa $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" cin $end
$var wire 1 ?" cout $end
$var wire 1 @" sum $end
$var wire 1 A" w1 $end
$var wire 1 B" w2 $end
$var wire 1 C" w3 $end
$upscope $end
$upscope $end
$scope begin gen[9] $end
$scope module fa $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$var wire 1 I" w1 $end
$var wire 1 J" w2 $end
$var wire 1 K" w3 $end
$upscope $end
$upscope $end
$scope begin gen[10] $end
$scope module fa $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" cin $end
$var wire 1 O" cout $end
$var wire 1 P" sum $end
$var wire 1 Q" w1 $end
$var wire 1 R" w2 $end
$var wire 1 S" w3 $end
$upscope $end
$upscope $end
$scope begin gen[11] $end
$scope module fa $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" sum $end
$var wire 1 Y" w1 $end
$var wire 1 Z" w2 $end
$var wire 1 [" w3 $end
$upscope $end
$upscope $end
$scope begin gen[12] $end
$scope module fa $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 ^" cin $end
$var wire 1 _" cout $end
$var wire 1 `" sum $end
$var wire 1 a" w1 $end
$var wire 1 b" w2 $end
$var wire 1 c" w3 $end
$upscope $end
$upscope $end
$scope begin gen[13] $end
$scope module fa $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" cin $end
$var wire 1 g" cout $end
$var wire 1 h" sum $end
$var wire 1 i" w1 $end
$var wire 1 j" w2 $end
$var wire 1 k" w3 $end
$upscope $end
$upscope $end
$scope begin gen[14] $end
$scope module fa $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cin $end
$var wire 1 o" cout $end
$var wire 1 p" sum $end
$var wire 1 q" w1 $end
$var wire 1 r" w2 $end
$var wire 1 s" w3 $end
$upscope $end
$upscope $end
$scope begin gen[15] $end
$scope module fa $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" cout $end
$var wire 1 x" sum $end
$var wire 1 y" w1 $end
$var wire 1 z" w2 $end
$var wire 1 {" w3 $end
$upscope $end
$upscope $end
$scope begin gen[16] $end
$scope module fa $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" cin $end
$var wire 1 !# cout $end
$var wire 1 "# sum $end
$var wire 1 ## w1 $end
$var wire 1 $# w2 $end
$var wire 1 %# w3 $end
$upscope $end
$upscope $end
$scope begin gen[17] $end
$scope module fa $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# cin $end
$var wire 1 )# cout $end
$var wire 1 *# sum $end
$var wire 1 +# w1 $end
$var wire 1 ,# w2 $end
$var wire 1 -# w3 $end
$upscope $end
$upscope $end
$scope begin gen[18] $end
$scope module fa $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# cin $end
$var wire 1 1# cout $end
$var wire 1 2# sum $end
$var wire 1 3# w1 $end
$var wire 1 4# w2 $end
$var wire 1 5# w3 $end
$upscope $end
$upscope $end
$scope begin gen[19] $end
$scope module fa $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# cin $end
$var wire 1 9# cout $end
$var wire 1 :# sum $end
$var wire 1 ;# w1 $end
$var wire 1 <# w2 $end
$var wire 1 =# w3 $end
$upscope $end
$upscope $end
$scope begin gen[20] $end
$scope module fa $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# cin $end
$var wire 1 A# cout $end
$var wire 1 B# sum $end
$var wire 1 C# w1 $end
$var wire 1 D# w2 $end
$var wire 1 E# w3 $end
$upscope $end
$upscope $end
$scope begin gen[21] $end
$scope module fa $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# cin $end
$var wire 1 I# cout $end
$var wire 1 J# sum $end
$var wire 1 K# w1 $end
$var wire 1 L# w2 $end
$var wire 1 M# w3 $end
$upscope $end
$upscope $end
$scope begin gen[22] $end
$scope module fa $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# sum $end
$var wire 1 S# w1 $end
$var wire 1 T# w2 $end
$var wire 1 U# w3 $end
$upscope $end
$upscope $end
$scope begin gen[23] $end
$scope module fa $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 X# cin $end
$var wire 1 Y# cout $end
$var wire 1 Z# sum $end
$var wire 1 [# w1 $end
$var wire 1 \# w2 $end
$var wire 1 ]# w3 $end
$upscope $end
$upscope $end
$scope begin gen[24] $end
$scope module fa $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# cin $end
$var wire 1 a# cout $end
$var wire 1 b# sum $end
$var wire 1 c# w1 $end
$var wire 1 d# w2 $end
$var wire 1 e# w3 $end
$upscope $end
$upscope $end
$scope begin gen[25] $end
$scope module fa $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# cin $end
$var wire 1 i# cout $end
$var wire 1 j# sum $end
$var wire 1 k# w1 $end
$var wire 1 l# w2 $end
$var wire 1 m# w3 $end
$upscope $end
$upscope $end
$scope begin gen[26] $end
$scope module fa $end
$var wire 1 n# a $end
$var wire 1 o# b $end
$var wire 1 p# cin $end
$var wire 1 q# cout $end
$var wire 1 r# sum $end
$var wire 1 s# w1 $end
$var wire 1 t# w2 $end
$var wire 1 u# w3 $end
$upscope $end
$upscope $end
$scope begin gen[27] $end
$scope module fa $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# cin $end
$var wire 1 y# cout $end
$var wire 1 z# sum $end
$var wire 1 {# w1 $end
$var wire 1 |# w2 $end
$var wire 1 }# w3 $end
$upscope $end
$upscope $end
$scope begin gen[28] $end
$scope module fa $end
$var wire 1 ~# a $end
$var wire 1 !$ b $end
$var wire 1 "$ cin $end
$var wire 1 #$ cout $end
$var wire 1 $$ sum $end
$var wire 1 %$ w1 $end
$var wire 1 &$ w2 $end
$var wire 1 '$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[29] $end
$scope module fa $end
$var wire 1 ($ a $end
$var wire 1 )$ b $end
$var wire 1 *$ cin $end
$var wire 1 +$ cout $end
$var wire 1 ,$ sum $end
$var wire 1 -$ w1 $end
$var wire 1 .$ w2 $end
$var wire 1 /$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[30] $end
$scope module fa $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ cin $end
$var wire 1 3$ cout $end
$var wire 1 4$ sum $end
$var wire 1 5$ w1 $end
$var wire 1 6$ w2 $end
$var wire 1 7$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[31] $end
$scope module fa $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 :$ cin $end
$var wire 1 ;$ cout $end
$var wire 1 <$ sum $end
$var wire 1 =$ w1 $end
$var wire 1 >$ w2 $end
$var wire 1 ?$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[32] $end
$scope module fa $end
$var wire 1 @$ a $end
$var wire 1 A$ b $end
$var wire 1 B$ cin $end
$var wire 1 C$ cout $end
$var wire 1 D$ sum $end
$var wire 1 E$ w1 $end
$var wire 1 F$ w2 $end
$var wire 1 G$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[33] $end
$scope module fa $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ sum $end
$var wire 1 M$ w1 $end
$var wire 1 N$ w2 $end
$var wire 1 O$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[34] $end
$scope module fa $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ cin $end
$var wire 1 S$ cout $end
$var wire 1 T$ sum $end
$var wire 1 U$ w1 $end
$var wire 1 V$ w2 $end
$var wire 1 W$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[35] $end
$scope module fa $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ cin $end
$var wire 1 [$ cout $end
$var wire 1 \$ sum $end
$var wire 1 ]$ w1 $end
$var wire 1 ^$ w2 $end
$var wire 1 _$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[36] $end
$scope module fa $end
$var wire 1 `$ a $end
$var wire 1 a$ b $end
$var wire 1 b$ cin $end
$var wire 1 c$ cout $end
$var wire 1 d$ sum $end
$var wire 1 e$ w1 $end
$var wire 1 f$ w2 $end
$var wire 1 g$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[37] $end
$scope module fa $end
$var wire 1 h$ a $end
$var wire 1 i$ b $end
$var wire 1 j$ cin $end
$var wire 1 k$ cout $end
$var wire 1 l$ sum $end
$var wire 1 m$ w1 $end
$var wire 1 n$ w2 $end
$var wire 1 o$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[38] $end
$scope module fa $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ cin $end
$var wire 1 s$ cout $end
$var wire 1 t$ sum $end
$var wire 1 u$ w1 $end
$var wire 1 v$ w2 $end
$var wire 1 w$ w3 $end
$upscope $end
$upscope $end
$scope begin gen[39] $end
$scope module fa $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 z$ cin $end
$var wire 1 {$ cout $end
$var wire 1 |$ sum $end
$var wire 1 }$ w1 $end
$var wire 1 ~$ w2 $end
$var wire 1 !% w3 $end
$upscope $end
$upscope $end
$scope begin gen[40] $end
$scope module fa $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $% cin $end
$var wire 1 %% cout $end
$var wire 1 &% sum $end
$var wire 1 '% w1 $end
$var wire 1 (% w2 $end
$var wire 1 )% w3 $end
$upscope $end
$upscope $end
$scope begin gen[41] $end
$scope module fa $end
$var wire 1 *% a $end
$var wire 1 +% b $end
$var wire 1 ,% cin $end
$var wire 1 -% cout $end
$var wire 1 .% sum $end
$var wire 1 /% w1 $end
$var wire 1 0% w2 $end
$var wire 1 1% w3 $end
$upscope $end
$upscope $end
$scope begin gen[42] $end
$scope module fa $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% cin $end
$var wire 1 5% cout $end
$var wire 1 6% sum $end
$var wire 1 7% w1 $end
$var wire 1 8% w2 $end
$var wire 1 9% w3 $end
$upscope $end
$upscope $end
$scope begin gen[43] $end
$scope module fa $end
$var wire 1 :% a $end
$var wire 1 ;% b $end
$var wire 1 <% cin $end
$var wire 1 =% cout $end
$var wire 1 >% sum $end
$var wire 1 ?% w1 $end
$var wire 1 @% w2 $end
$var wire 1 A% w3 $end
$upscope $end
$upscope $end
$scope begin gen[44] $end
$scope module fa $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% cin $end
$var wire 1 E% cout $end
$var wire 1 F% sum $end
$var wire 1 G% w1 $end
$var wire 1 H% w2 $end
$var wire 1 I% w3 $end
$upscope $end
$upscope $end
$scope begin gen[45] $end
$scope module fa $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 L% cin $end
$var wire 1 M% cout $end
$var wire 1 N% sum $end
$var wire 1 O% w1 $end
$var wire 1 P% w2 $end
$var wire 1 Q% w3 $end
$upscope $end
$upscope $end
$scope begin gen[46] $end
$scope module fa $end
$var wire 1 R% a $end
$var wire 1 S% b $end
$var wire 1 T% cin $end
$var wire 1 U% cout $end
$var wire 1 V% sum $end
$var wire 1 W% w1 $end
$var wire 1 X% w2 $end
$var wire 1 Y% w3 $end
$upscope $end
$upscope $end
$scope begin gen[47] $end
$scope module fa $end
$var wire 1 Z% a $end
$var wire 1 [% b $end
$var wire 1 \% cin $end
$var wire 1 ]% cout $end
$var wire 1 ^% sum $end
$var wire 1 _% w1 $end
$var wire 1 `% w2 $end
$var wire 1 a% w3 $end
$upscope $end
$upscope $end
$scope begin gen[48] $end
$scope module fa $end
$var wire 1 b% a $end
$var wire 1 c% b $end
$var wire 1 d% cin $end
$var wire 1 e% cout $end
$var wire 1 f% sum $end
$var wire 1 g% w1 $end
$var wire 1 h% w2 $end
$var wire 1 i% w3 $end
$upscope $end
$upscope $end
$scope begin gen[49] $end
$scope module fa $end
$var wire 1 j% a $end
$var wire 1 k% b $end
$var wire 1 l% cin $end
$var wire 1 m% cout $end
$var wire 1 n% sum $end
$var wire 1 o% w1 $end
$var wire 1 p% w2 $end
$var wire 1 q% w3 $end
$upscope $end
$upscope $end
$scope begin gen[50] $end
$scope module fa $end
$var wire 1 r% a $end
$var wire 1 s% b $end
$var wire 1 t% cin $end
$var wire 1 u% cout $end
$var wire 1 v% sum $end
$var wire 1 w% w1 $end
$var wire 1 x% w2 $end
$var wire 1 y% w3 $end
$upscope $end
$upscope $end
$scope begin gen[51] $end
$scope module fa $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% cin $end
$var wire 1 }% cout $end
$var wire 1 ~% sum $end
$var wire 1 !& w1 $end
$var wire 1 "& w2 $end
$var wire 1 #& w3 $end
$upscope $end
$upscope $end
$scope begin gen[52] $end
$scope module fa $end
$var wire 1 $& a $end
$var wire 1 %& b $end
$var wire 1 && cin $end
$var wire 1 '& cout $end
$var wire 1 (& sum $end
$var wire 1 )& w1 $end
$var wire 1 *& w2 $end
$var wire 1 +& w3 $end
$upscope $end
$upscope $end
$scope begin gen[53] $end
$scope module fa $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 .& cin $end
$var wire 1 /& cout $end
$var wire 1 0& sum $end
$var wire 1 1& w1 $end
$var wire 1 2& w2 $end
$var wire 1 3& w3 $end
$upscope $end
$upscope $end
$scope begin gen[54] $end
$scope module fa $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& cin $end
$var wire 1 7& cout $end
$var wire 1 8& sum $end
$var wire 1 9& w1 $end
$var wire 1 :& w2 $end
$var wire 1 ;& w3 $end
$upscope $end
$upscope $end
$scope begin gen[55] $end
$scope module fa $end
$var wire 1 <& a $end
$var wire 1 =& b $end
$var wire 1 >& cin $end
$var wire 1 ?& cout $end
$var wire 1 @& sum $end
$var wire 1 A& w1 $end
$var wire 1 B& w2 $end
$var wire 1 C& w3 $end
$upscope $end
$upscope $end
$scope begin gen[56] $end
$scope module fa $end
$var wire 1 D& a $end
$var wire 1 E& b $end
$var wire 1 F& cin $end
$var wire 1 G& cout $end
$var wire 1 H& sum $end
$var wire 1 I& w1 $end
$var wire 1 J& w2 $end
$var wire 1 K& w3 $end
$upscope $end
$upscope $end
$scope begin gen[57] $end
$scope module fa $end
$var wire 1 L& a $end
$var wire 1 M& b $end
$var wire 1 N& cin $end
$var wire 1 O& cout $end
$var wire 1 P& sum $end
$var wire 1 Q& w1 $end
$var wire 1 R& w2 $end
$var wire 1 S& w3 $end
$upscope $end
$upscope $end
$scope begin gen[58] $end
$scope module fa $end
$var wire 1 T& a $end
$var wire 1 U& b $end
$var wire 1 V& cin $end
$var wire 1 W& cout $end
$var wire 1 X& sum $end
$var wire 1 Y& w1 $end
$var wire 1 Z& w2 $end
$var wire 1 [& w3 $end
$upscope $end
$upscope $end
$scope begin gen[59] $end
$scope module fa $end
$var wire 1 \& a $end
$var wire 1 ]& b $end
$var wire 1 ^& cin $end
$var wire 1 _& cout $end
$var wire 1 `& sum $end
$var wire 1 a& w1 $end
$var wire 1 b& w2 $end
$var wire 1 c& w3 $end
$upscope $end
$upscope $end
$scope begin gen[60] $end
$scope module fa $end
$var wire 1 d& a $end
$var wire 1 e& b $end
$var wire 1 f& cin $end
$var wire 1 g& cout $end
$var wire 1 h& sum $end
$var wire 1 i& w1 $end
$var wire 1 j& w2 $end
$var wire 1 k& w3 $end
$upscope $end
$upscope $end
$scope begin gen[61] $end
$scope module fa $end
$var wire 1 l& a $end
$var wire 1 m& b $end
$var wire 1 n& cin $end
$var wire 1 o& cout $end
$var wire 1 p& sum $end
$var wire 1 q& w1 $end
$var wire 1 r& w2 $end
$var wire 1 s& w3 $end
$upscope $end
$upscope $end
$scope begin gen[62] $end
$scope module fa $end
$var wire 1 t& a $end
$var wire 1 u& b $end
$var wire 1 v& cin $end
$var wire 1 w& cout $end
$var wire 1 x& sum $end
$var wire 1 y& w1 $end
$var wire 1 z& w2 $end
$var wire 1 {& w3 $end
$upscope $end
$upscope $end
$scope begin gen[63] $end
$scope module fa $end
$var wire 1 |& a $end
$var wire 1 }& b $end
$var wire 1 ~& cin $end
$var wire 1 !' cout $end
$var wire 1 "' sum $end
$var wire 1 #' w1 $end
$var wire 1 $' w2 $end
$var wire 1 %' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module and_gate $end
$var wire 64 &' a [63:0] $end
$var wire 64 '' b [63:0] $end
$var wire 64 (' result [63:0] $end
$scope begin And_block[0] $end
$upscope $end
$scope begin And_block[1] $end
$upscope $end
$scope begin And_block[2] $end
$upscope $end
$scope begin And_block[3] $end
$upscope $end
$scope begin And_block[4] $end
$upscope $end
$scope begin And_block[5] $end
$upscope $end
$scope begin And_block[6] $end
$upscope $end
$scope begin And_block[7] $end
$upscope $end
$scope begin And_block[8] $end
$upscope $end
$scope begin And_block[9] $end
$upscope $end
$scope begin And_block[10] $end
$upscope $end
$scope begin And_block[11] $end
$upscope $end
$scope begin And_block[12] $end
$upscope $end
$scope begin And_block[13] $end
$upscope $end
$scope begin And_block[14] $end
$upscope $end
$scope begin And_block[15] $end
$upscope $end
$scope begin And_block[16] $end
$upscope $end
$scope begin And_block[17] $end
$upscope $end
$scope begin And_block[18] $end
$upscope $end
$scope begin And_block[19] $end
$upscope $end
$scope begin And_block[20] $end
$upscope $end
$scope begin And_block[21] $end
$upscope $end
$scope begin And_block[22] $end
$upscope $end
$scope begin And_block[23] $end
$upscope $end
$scope begin And_block[24] $end
$upscope $end
$scope begin And_block[25] $end
$upscope $end
$scope begin And_block[26] $end
$upscope $end
$scope begin And_block[27] $end
$upscope $end
$scope begin And_block[28] $end
$upscope $end
$scope begin And_block[29] $end
$upscope $end
$scope begin And_block[30] $end
$upscope $end
$scope begin And_block[31] $end
$upscope $end
$scope begin And_block[32] $end
$upscope $end
$scope begin And_block[33] $end
$upscope $end
$scope begin And_block[34] $end
$upscope $end
$scope begin And_block[35] $end
$upscope $end
$scope begin And_block[36] $end
$upscope $end
$scope begin And_block[37] $end
$upscope $end
$scope begin And_block[38] $end
$upscope $end
$scope begin And_block[39] $end
$upscope $end
$scope begin And_block[40] $end
$upscope $end
$scope begin And_block[41] $end
$upscope $end
$scope begin And_block[42] $end
$upscope $end
$scope begin And_block[43] $end
$upscope $end
$scope begin And_block[44] $end
$upscope $end
$scope begin And_block[45] $end
$upscope $end
$scope begin And_block[46] $end
$upscope $end
$scope begin And_block[47] $end
$upscope $end
$scope begin And_block[48] $end
$upscope $end
$scope begin And_block[49] $end
$upscope $end
$scope begin And_block[50] $end
$upscope $end
$scope begin And_block[51] $end
$upscope $end
$scope begin And_block[52] $end
$upscope $end
$scope begin And_block[53] $end
$upscope $end
$scope begin And_block[54] $end
$upscope $end
$scope begin And_block[55] $end
$upscope $end
$scope begin And_block[56] $end
$upscope $end
$scope begin And_block[57] $end
$upscope $end
$scope begin And_block[58] $end
$upscope $end
$scope begin And_block[59] $end
$upscope $end
$scope begin And_block[60] $end
$upscope $end
$scope begin And_block[61] $end
$upscope $end
$scope begin And_block[62] $end
$upscope $end
$scope begin And_block[63] $end
$upscope $end
$upscope $end
$scope module or_gate $end
$var wire 64 )' a [63:0] $end
$var wire 64 *' b [63:0] $end
$var wire 64 +' result [63:0] $end
$scope begin Or_block[0] $end
$upscope $end
$scope begin Or_block[1] $end
$upscope $end
$scope begin Or_block[2] $end
$upscope $end
$scope begin Or_block[3] $end
$upscope $end
$scope begin Or_block[4] $end
$upscope $end
$scope begin Or_block[5] $end
$upscope $end
$scope begin Or_block[6] $end
$upscope $end
$scope begin Or_block[7] $end
$upscope $end
$scope begin Or_block[8] $end
$upscope $end
$scope begin Or_block[9] $end
$upscope $end
$scope begin Or_block[10] $end
$upscope $end
$scope begin Or_block[11] $end
$upscope $end
$scope begin Or_block[12] $end
$upscope $end
$scope begin Or_block[13] $end
$upscope $end
$scope begin Or_block[14] $end
$upscope $end
$scope begin Or_block[15] $end
$upscope $end
$scope begin Or_block[16] $end
$upscope $end
$scope begin Or_block[17] $end
$upscope $end
$scope begin Or_block[18] $end
$upscope $end
$scope begin Or_block[19] $end
$upscope $end
$scope begin Or_block[20] $end
$upscope $end
$scope begin Or_block[21] $end
$upscope $end
$scope begin Or_block[22] $end
$upscope $end
$scope begin Or_block[23] $end
$upscope $end
$scope begin Or_block[24] $end
$upscope $end
$scope begin Or_block[25] $end
$upscope $end
$scope begin Or_block[26] $end
$upscope $end
$scope begin Or_block[27] $end
$upscope $end
$scope begin Or_block[28] $end
$upscope $end
$scope begin Or_block[29] $end
$upscope $end
$scope begin Or_block[30] $end
$upscope $end
$scope begin Or_block[31] $end
$upscope $end
$scope begin Or_block[32] $end
$upscope $end
$scope begin Or_block[33] $end
$upscope $end
$scope begin Or_block[34] $end
$upscope $end
$scope begin Or_block[35] $end
$upscope $end
$scope begin Or_block[36] $end
$upscope $end
$scope begin Or_block[37] $end
$upscope $end
$scope begin Or_block[38] $end
$upscope $end
$scope begin Or_block[39] $end
$upscope $end
$scope begin Or_block[40] $end
$upscope $end
$scope begin Or_block[41] $end
$upscope $end
$scope begin Or_block[42] $end
$upscope $end
$scope begin Or_block[43] $end
$upscope $end
$scope begin Or_block[44] $end
$upscope $end
$scope begin Or_block[45] $end
$upscope $end
$scope begin Or_block[46] $end
$upscope $end
$scope begin Or_block[47] $end
$upscope $end
$scope begin Or_block[48] $end
$upscope $end
$scope begin Or_block[49] $end
$upscope $end
$scope begin Or_block[50] $end
$upscope $end
$scope begin Or_block[51] $end
$upscope $end
$scope begin Or_block[52] $end
$upscope $end
$scope begin Or_block[53] $end
$upscope $end
$scope begin Or_block[54] $end
$upscope $end
$scope begin Or_block[55] $end
$upscope $end
$scope begin Or_block[56] $end
$upscope $end
$scope begin Or_block[57] $end
$upscope $end
$scope begin Or_block[58] $end
$upscope $end
$scope begin Or_block[59] $end
$upscope $end
$scope begin Or_block[60] $end
$upscope $end
$scope begin Or_block[61] $end
$upscope $end
$scope begin Or_block[62] $end
$upscope $end
$scope begin Or_block[63] $end
$upscope $end
$upscope $end
$scope module subtractor $end
$var wire 64 ,' a [63:0] $end
$var wire 64 -' b [63:0] $end
$var wire 1 .' cin $end
$var wire 1 P overflow $end
$var wire 64 /' diff [63:0] $end
$var wire 1 Q cout $end
$var wire 65 0' c [64:0] $end
$scope begin gen[0] $end
$scope module fs $end
$var wire 1 1' a $end
$var wire 1 2' b $end
$var wire 1 3' cin $end
$var wire 1 4' cout $end
$var wire 1 5' sum $end
$var wire 1 6' w1 $end
$var wire 1 7' w2 $end
$var wire 1 8' w3 $end
$upscope $end
$upscope $end
$scope begin gen[1] $end
$scope module fs $end
$var wire 1 9' a $end
$var wire 1 :' b $end
$var wire 1 ;' cin $end
$var wire 1 <' cout $end
$var wire 1 =' sum $end
$var wire 1 >' w1 $end
$var wire 1 ?' w2 $end
$var wire 1 @' w3 $end
$upscope $end
$upscope $end
$scope begin gen[2] $end
$scope module fs $end
$var wire 1 A' a $end
$var wire 1 B' b $end
$var wire 1 C' cin $end
$var wire 1 D' cout $end
$var wire 1 E' sum $end
$var wire 1 F' w1 $end
$var wire 1 G' w2 $end
$var wire 1 H' w3 $end
$upscope $end
$upscope $end
$scope begin gen[3] $end
$scope module fs $end
$var wire 1 I' a $end
$var wire 1 J' b $end
$var wire 1 K' cin $end
$var wire 1 L' cout $end
$var wire 1 M' sum $end
$var wire 1 N' w1 $end
$var wire 1 O' w2 $end
$var wire 1 P' w3 $end
$upscope $end
$upscope $end
$scope begin gen[4] $end
$scope module fs $end
$var wire 1 Q' a $end
$var wire 1 R' b $end
$var wire 1 S' cin $end
$var wire 1 T' cout $end
$var wire 1 U' sum $end
$var wire 1 V' w1 $end
$var wire 1 W' w2 $end
$var wire 1 X' w3 $end
$upscope $end
$upscope $end
$scope begin gen[5] $end
$scope module fs $end
$var wire 1 Y' a $end
$var wire 1 Z' b $end
$var wire 1 [' cin $end
$var wire 1 \' cout $end
$var wire 1 ]' sum $end
$var wire 1 ^' w1 $end
$var wire 1 _' w2 $end
$var wire 1 `' w3 $end
$upscope $end
$upscope $end
$scope begin gen[6] $end
$scope module fs $end
$var wire 1 a' a $end
$var wire 1 b' b $end
$var wire 1 c' cin $end
$var wire 1 d' cout $end
$var wire 1 e' sum $end
$var wire 1 f' w1 $end
$var wire 1 g' w2 $end
$var wire 1 h' w3 $end
$upscope $end
$upscope $end
$scope begin gen[7] $end
$scope module fs $end
$var wire 1 i' a $end
$var wire 1 j' b $end
$var wire 1 k' cin $end
$var wire 1 l' cout $end
$var wire 1 m' sum $end
$var wire 1 n' w1 $end
$var wire 1 o' w2 $end
$var wire 1 p' w3 $end
$upscope $end
$upscope $end
$scope begin gen[8] $end
$scope module fs $end
$var wire 1 q' a $end
$var wire 1 r' b $end
$var wire 1 s' cin $end
$var wire 1 t' cout $end
$var wire 1 u' sum $end
$var wire 1 v' w1 $end
$var wire 1 w' w2 $end
$var wire 1 x' w3 $end
$upscope $end
$upscope $end
$scope begin gen[9] $end
$scope module fs $end
$var wire 1 y' a $end
$var wire 1 z' b $end
$var wire 1 {' cin $end
$var wire 1 |' cout $end
$var wire 1 }' sum $end
$var wire 1 ~' w1 $end
$var wire 1 !( w2 $end
$var wire 1 "( w3 $end
$upscope $end
$upscope $end
$scope begin gen[10] $end
$scope module fs $end
$var wire 1 #( a $end
$var wire 1 $( b $end
$var wire 1 %( cin $end
$var wire 1 &( cout $end
$var wire 1 '( sum $end
$var wire 1 (( w1 $end
$var wire 1 )( w2 $end
$var wire 1 *( w3 $end
$upscope $end
$upscope $end
$scope begin gen[11] $end
$scope module fs $end
$var wire 1 +( a $end
$var wire 1 ,( b $end
$var wire 1 -( cin $end
$var wire 1 .( cout $end
$var wire 1 /( sum $end
$var wire 1 0( w1 $end
$var wire 1 1( w2 $end
$var wire 1 2( w3 $end
$upscope $end
$upscope $end
$scope begin gen[12] $end
$scope module fs $end
$var wire 1 3( a $end
$var wire 1 4( b $end
$var wire 1 5( cin $end
$var wire 1 6( cout $end
$var wire 1 7( sum $end
$var wire 1 8( w1 $end
$var wire 1 9( w2 $end
$var wire 1 :( w3 $end
$upscope $end
$upscope $end
$scope begin gen[13] $end
$scope module fs $end
$var wire 1 ;( a $end
$var wire 1 <( b $end
$var wire 1 =( cin $end
$var wire 1 >( cout $end
$var wire 1 ?( sum $end
$var wire 1 @( w1 $end
$var wire 1 A( w2 $end
$var wire 1 B( w3 $end
$upscope $end
$upscope $end
$scope begin gen[14] $end
$scope module fs $end
$var wire 1 C( a $end
$var wire 1 D( b $end
$var wire 1 E( cin $end
$var wire 1 F( cout $end
$var wire 1 G( sum $end
$var wire 1 H( w1 $end
$var wire 1 I( w2 $end
$var wire 1 J( w3 $end
$upscope $end
$upscope $end
$scope begin gen[15] $end
$scope module fs $end
$var wire 1 K( a $end
$var wire 1 L( b $end
$var wire 1 M( cin $end
$var wire 1 N( cout $end
$var wire 1 O( sum $end
$var wire 1 P( w1 $end
$var wire 1 Q( w2 $end
$var wire 1 R( w3 $end
$upscope $end
$upscope $end
$scope begin gen[16] $end
$scope module fs $end
$var wire 1 S( a $end
$var wire 1 T( b $end
$var wire 1 U( cin $end
$var wire 1 V( cout $end
$var wire 1 W( sum $end
$var wire 1 X( w1 $end
$var wire 1 Y( w2 $end
$var wire 1 Z( w3 $end
$upscope $end
$upscope $end
$scope begin gen[17] $end
$scope module fs $end
$var wire 1 [( a $end
$var wire 1 \( b $end
$var wire 1 ]( cin $end
$var wire 1 ^( cout $end
$var wire 1 _( sum $end
$var wire 1 `( w1 $end
$var wire 1 a( w2 $end
$var wire 1 b( w3 $end
$upscope $end
$upscope $end
$scope begin gen[18] $end
$scope module fs $end
$var wire 1 c( a $end
$var wire 1 d( b $end
$var wire 1 e( cin $end
$var wire 1 f( cout $end
$var wire 1 g( sum $end
$var wire 1 h( w1 $end
$var wire 1 i( w2 $end
$var wire 1 j( w3 $end
$upscope $end
$upscope $end
$scope begin gen[19] $end
$scope module fs $end
$var wire 1 k( a $end
$var wire 1 l( b $end
$var wire 1 m( cin $end
$var wire 1 n( cout $end
$var wire 1 o( sum $end
$var wire 1 p( w1 $end
$var wire 1 q( w2 $end
$var wire 1 r( w3 $end
$upscope $end
$upscope $end
$scope begin gen[20] $end
$scope module fs $end
$var wire 1 s( a $end
$var wire 1 t( b $end
$var wire 1 u( cin $end
$var wire 1 v( cout $end
$var wire 1 w( sum $end
$var wire 1 x( w1 $end
$var wire 1 y( w2 $end
$var wire 1 z( w3 $end
$upscope $end
$upscope $end
$scope begin gen[21] $end
$scope module fs $end
$var wire 1 {( a $end
$var wire 1 |( b $end
$var wire 1 }( cin $end
$var wire 1 ~( cout $end
$var wire 1 !) sum $end
$var wire 1 ") w1 $end
$var wire 1 #) w2 $end
$var wire 1 $) w3 $end
$upscope $end
$upscope $end
$scope begin gen[22] $end
$scope module fs $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 ') cin $end
$var wire 1 () cout $end
$var wire 1 )) sum $end
$var wire 1 *) w1 $end
$var wire 1 +) w2 $end
$var wire 1 ,) w3 $end
$upscope $end
$upscope $end
$scope begin gen[23] $end
$scope module fs $end
$var wire 1 -) a $end
$var wire 1 .) b $end
$var wire 1 /) cin $end
$var wire 1 0) cout $end
$var wire 1 1) sum $end
$var wire 1 2) w1 $end
$var wire 1 3) w2 $end
$var wire 1 4) w3 $end
$upscope $end
$upscope $end
$scope begin gen[24] $end
$scope module fs $end
$var wire 1 5) a $end
$var wire 1 6) b $end
$var wire 1 7) cin $end
$var wire 1 8) cout $end
$var wire 1 9) sum $end
$var wire 1 :) w1 $end
$var wire 1 ;) w2 $end
$var wire 1 <) w3 $end
$upscope $end
$upscope $end
$scope begin gen[25] $end
$scope module fs $end
$var wire 1 =) a $end
$var wire 1 >) b $end
$var wire 1 ?) cin $end
$var wire 1 @) cout $end
$var wire 1 A) sum $end
$var wire 1 B) w1 $end
$var wire 1 C) w2 $end
$var wire 1 D) w3 $end
$upscope $end
$upscope $end
$scope begin gen[26] $end
$scope module fs $end
$var wire 1 E) a $end
$var wire 1 F) b $end
$var wire 1 G) cin $end
$var wire 1 H) cout $end
$var wire 1 I) sum $end
$var wire 1 J) w1 $end
$var wire 1 K) w2 $end
$var wire 1 L) w3 $end
$upscope $end
$upscope $end
$scope begin gen[27] $end
$scope module fs $end
$var wire 1 M) a $end
$var wire 1 N) b $end
$var wire 1 O) cin $end
$var wire 1 P) cout $end
$var wire 1 Q) sum $end
$var wire 1 R) w1 $end
$var wire 1 S) w2 $end
$var wire 1 T) w3 $end
$upscope $end
$upscope $end
$scope begin gen[28] $end
$scope module fs $end
$var wire 1 U) a $end
$var wire 1 V) b $end
$var wire 1 W) cin $end
$var wire 1 X) cout $end
$var wire 1 Y) sum $end
$var wire 1 Z) w1 $end
$var wire 1 [) w2 $end
$var wire 1 \) w3 $end
$upscope $end
$upscope $end
$scope begin gen[29] $end
$scope module fs $end
$var wire 1 ]) a $end
$var wire 1 ^) b $end
$var wire 1 _) cin $end
$var wire 1 `) cout $end
$var wire 1 a) sum $end
$var wire 1 b) w1 $end
$var wire 1 c) w2 $end
$var wire 1 d) w3 $end
$upscope $end
$upscope $end
$scope begin gen[30] $end
$scope module fs $end
$var wire 1 e) a $end
$var wire 1 f) b $end
$var wire 1 g) cin $end
$var wire 1 h) cout $end
$var wire 1 i) sum $end
$var wire 1 j) w1 $end
$var wire 1 k) w2 $end
$var wire 1 l) w3 $end
$upscope $end
$upscope $end
$scope begin gen[31] $end
$scope module fs $end
$var wire 1 m) a $end
$var wire 1 n) b $end
$var wire 1 o) cin $end
$var wire 1 p) cout $end
$var wire 1 q) sum $end
$var wire 1 r) w1 $end
$var wire 1 s) w2 $end
$var wire 1 t) w3 $end
$upscope $end
$upscope $end
$scope begin gen[32] $end
$scope module fs $end
$var wire 1 u) a $end
$var wire 1 v) b $end
$var wire 1 w) cin $end
$var wire 1 x) cout $end
$var wire 1 y) sum $end
$var wire 1 z) w1 $end
$var wire 1 {) w2 $end
$var wire 1 |) w3 $end
$upscope $end
$upscope $end
$scope begin gen[33] $end
$scope module fs $end
$var wire 1 }) a $end
$var wire 1 ~) b $end
$var wire 1 !* cin $end
$var wire 1 "* cout $end
$var wire 1 #* sum $end
$var wire 1 $* w1 $end
$var wire 1 %* w2 $end
$var wire 1 &* w3 $end
$upscope $end
$upscope $end
$scope begin gen[34] $end
$scope module fs $end
$var wire 1 '* a $end
$var wire 1 (* b $end
$var wire 1 )* cin $end
$var wire 1 ** cout $end
$var wire 1 +* sum $end
$var wire 1 ,* w1 $end
$var wire 1 -* w2 $end
$var wire 1 .* w3 $end
$upscope $end
$upscope $end
$scope begin gen[35] $end
$scope module fs $end
$var wire 1 /* a $end
$var wire 1 0* b $end
$var wire 1 1* cin $end
$var wire 1 2* cout $end
$var wire 1 3* sum $end
$var wire 1 4* w1 $end
$var wire 1 5* w2 $end
$var wire 1 6* w3 $end
$upscope $end
$upscope $end
$scope begin gen[36] $end
$scope module fs $end
$var wire 1 7* a $end
$var wire 1 8* b $end
$var wire 1 9* cin $end
$var wire 1 :* cout $end
$var wire 1 ;* sum $end
$var wire 1 <* w1 $end
$var wire 1 =* w2 $end
$var wire 1 >* w3 $end
$upscope $end
$upscope $end
$scope begin gen[37] $end
$scope module fs $end
$var wire 1 ?* a $end
$var wire 1 @* b $end
$var wire 1 A* cin $end
$var wire 1 B* cout $end
$var wire 1 C* sum $end
$var wire 1 D* w1 $end
$var wire 1 E* w2 $end
$var wire 1 F* w3 $end
$upscope $end
$upscope $end
$scope begin gen[38] $end
$scope module fs $end
$var wire 1 G* a $end
$var wire 1 H* b $end
$var wire 1 I* cin $end
$var wire 1 J* cout $end
$var wire 1 K* sum $end
$var wire 1 L* w1 $end
$var wire 1 M* w2 $end
$var wire 1 N* w3 $end
$upscope $end
$upscope $end
$scope begin gen[39] $end
$scope module fs $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 R* cout $end
$var wire 1 S* sum $end
$var wire 1 T* w1 $end
$var wire 1 U* w2 $end
$var wire 1 V* w3 $end
$upscope $end
$upscope $end
$scope begin gen[40] $end
$scope module fs $end
$var wire 1 W* a $end
$var wire 1 X* b $end
$var wire 1 Y* cin $end
$var wire 1 Z* cout $end
$var wire 1 [* sum $end
$var wire 1 \* w1 $end
$var wire 1 ]* w2 $end
$var wire 1 ^* w3 $end
$upscope $end
$upscope $end
$scope begin gen[41] $end
$scope module fs $end
$var wire 1 _* a $end
$var wire 1 `* b $end
$var wire 1 a* cin $end
$var wire 1 b* cout $end
$var wire 1 c* sum $end
$var wire 1 d* w1 $end
$var wire 1 e* w2 $end
$var wire 1 f* w3 $end
$upscope $end
$upscope $end
$scope begin gen[42] $end
$scope module fs $end
$var wire 1 g* a $end
$var wire 1 h* b $end
$var wire 1 i* cin $end
$var wire 1 j* cout $end
$var wire 1 k* sum $end
$var wire 1 l* w1 $end
$var wire 1 m* w2 $end
$var wire 1 n* w3 $end
$upscope $end
$upscope $end
$scope begin gen[43] $end
$scope module fs $end
$var wire 1 o* a $end
$var wire 1 p* b $end
$var wire 1 q* cin $end
$var wire 1 r* cout $end
$var wire 1 s* sum $end
$var wire 1 t* w1 $end
$var wire 1 u* w2 $end
$var wire 1 v* w3 $end
$upscope $end
$upscope $end
$scope begin gen[44] $end
$scope module fs $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* cin $end
$var wire 1 z* cout $end
$var wire 1 {* sum $end
$var wire 1 |* w1 $end
$var wire 1 }* w2 $end
$var wire 1 ~* w3 $end
$upscope $end
$upscope $end
$scope begin gen[45] $end
$scope module fs $end
$var wire 1 !+ a $end
$var wire 1 "+ b $end
$var wire 1 #+ cin $end
$var wire 1 $+ cout $end
$var wire 1 %+ sum $end
$var wire 1 &+ w1 $end
$var wire 1 '+ w2 $end
$var wire 1 (+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[46] $end
$scope module fs $end
$var wire 1 )+ a $end
$var wire 1 *+ b $end
$var wire 1 ++ cin $end
$var wire 1 ,+ cout $end
$var wire 1 -+ sum $end
$var wire 1 .+ w1 $end
$var wire 1 /+ w2 $end
$var wire 1 0+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[47] $end
$scope module fs $end
$var wire 1 1+ a $end
$var wire 1 2+ b $end
$var wire 1 3+ cin $end
$var wire 1 4+ cout $end
$var wire 1 5+ sum $end
$var wire 1 6+ w1 $end
$var wire 1 7+ w2 $end
$var wire 1 8+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[48] $end
$scope module fs $end
$var wire 1 9+ a $end
$var wire 1 :+ b $end
$var wire 1 ;+ cin $end
$var wire 1 <+ cout $end
$var wire 1 =+ sum $end
$var wire 1 >+ w1 $end
$var wire 1 ?+ w2 $end
$var wire 1 @+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[49] $end
$scope module fs $end
$var wire 1 A+ a $end
$var wire 1 B+ b $end
$var wire 1 C+ cin $end
$var wire 1 D+ cout $end
$var wire 1 E+ sum $end
$var wire 1 F+ w1 $end
$var wire 1 G+ w2 $end
$var wire 1 H+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[50] $end
$scope module fs $end
$var wire 1 I+ a $end
$var wire 1 J+ b $end
$var wire 1 K+ cin $end
$var wire 1 L+ cout $end
$var wire 1 M+ sum $end
$var wire 1 N+ w1 $end
$var wire 1 O+ w2 $end
$var wire 1 P+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[51] $end
$scope module fs $end
$var wire 1 Q+ a $end
$var wire 1 R+ b $end
$var wire 1 S+ cin $end
$var wire 1 T+ cout $end
$var wire 1 U+ sum $end
$var wire 1 V+ w1 $end
$var wire 1 W+ w2 $end
$var wire 1 X+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[52] $end
$scope module fs $end
$var wire 1 Y+ a $end
$var wire 1 Z+ b $end
$var wire 1 [+ cin $end
$var wire 1 \+ cout $end
$var wire 1 ]+ sum $end
$var wire 1 ^+ w1 $end
$var wire 1 _+ w2 $end
$var wire 1 `+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[53] $end
$scope module fs $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ cin $end
$var wire 1 d+ cout $end
$var wire 1 e+ sum $end
$var wire 1 f+ w1 $end
$var wire 1 g+ w2 $end
$var wire 1 h+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[54] $end
$scope module fs $end
$var wire 1 i+ a $end
$var wire 1 j+ b $end
$var wire 1 k+ cin $end
$var wire 1 l+ cout $end
$var wire 1 m+ sum $end
$var wire 1 n+ w1 $end
$var wire 1 o+ w2 $end
$var wire 1 p+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[55] $end
$scope module fs $end
$var wire 1 q+ a $end
$var wire 1 r+ b $end
$var wire 1 s+ cin $end
$var wire 1 t+ cout $end
$var wire 1 u+ sum $end
$var wire 1 v+ w1 $end
$var wire 1 w+ w2 $end
$var wire 1 x+ w3 $end
$upscope $end
$upscope $end
$scope begin gen[56] $end
$scope module fs $end
$var wire 1 y+ a $end
$var wire 1 z+ b $end
$var wire 1 {+ cin $end
$var wire 1 |+ cout $end
$var wire 1 }+ sum $end
$var wire 1 ~+ w1 $end
$var wire 1 !, w2 $end
$var wire 1 ", w3 $end
$upscope $end
$upscope $end
$scope begin gen[57] $end
$scope module fs $end
$var wire 1 #, a $end
$var wire 1 $, b $end
$var wire 1 %, cin $end
$var wire 1 &, cout $end
$var wire 1 ', sum $end
$var wire 1 (, w1 $end
$var wire 1 ), w2 $end
$var wire 1 *, w3 $end
$upscope $end
$upscope $end
$scope begin gen[58] $end
$scope module fs $end
$var wire 1 +, a $end
$var wire 1 ,, b $end
$var wire 1 -, cin $end
$var wire 1 ., cout $end
$var wire 1 /, sum $end
$var wire 1 0, w1 $end
$var wire 1 1, w2 $end
$var wire 1 2, w3 $end
$upscope $end
$upscope $end
$scope begin gen[59] $end
$scope module fs $end
$var wire 1 3, a $end
$var wire 1 4, b $end
$var wire 1 5, cin $end
$var wire 1 6, cout $end
$var wire 1 7, sum $end
$var wire 1 8, w1 $end
$var wire 1 9, w2 $end
$var wire 1 :, w3 $end
$upscope $end
$upscope $end
$scope begin gen[60] $end
$scope module fs $end
$var wire 1 ;, a $end
$var wire 1 <, b $end
$var wire 1 =, cin $end
$var wire 1 >, cout $end
$var wire 1 ?, sum $end
$var wire 1 @, w1 $end
$var wire 1 A, w2 $end
$var wire 1 B, w3 $end
$upscope $end
$upscope $end
$scope begin gen[61] $end
$scope module fs $end
$var wire 1 C, a $end
$var wire 1 D, b $end
$var wire 1 E, cin $end
$var wire 1 F, cout $end
$var wire 1 G, sum $end
$var wire 1 H, w1 $end
$var wire 1 I, w2 $end
$var wire 1 J, w3 $end
$upscope $end
$upscope $end
$scope begin gen[62] $end
$scope module fs $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, cin $end
$var wire 1 N, cout $end
$var wire 1 O, sum $end
$var wire 1 P, w1 $end
$var wire 1 Q, w2 $end
$var wire 1 R, w3 $end
$upscope $end
$upscope $end
$scope begin gen[63] $end
$scope module fs $end
$var wire 1 S, a $end
$var wire 1 T, b $end
$var wire 1 U, cin $end
$var wire 1 V, cout $end
$var wire 1 W, sum $end
$var wire 1 X, w1 $end
$var wire 1 Y, w2 $end
$var wire 1 Z, w3 $end
$upscope $end
$upscope $end
$scope module ovf $end
$var wire 1 [, a_sign $end
$var wire 1 \, b_sign $end
$var wire 1 ], diff_sign $end
$var wire 1 P overflow $end
$var wire 1 ^, w1 $end
$var wire 1 _, w2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu_input $end
$var wire 4 `, funct [3:0] $end
$var wire 2 a, ALUOp [1:0] $end
$var reg 4 b, ALUCtrl [3:0] $end
$upscope $end
$scope module control $end
$var wire 7 c, opcode [6:0] $end
$var reg 2 d, ALUOp [1:0] $end
$var reg 1 2 ALUSrc $end
$var reg 1 / Branch $end
$var reg 1 . MemRead $end
$var reg 1 - MemWrite $end
$var reg 1 , MemtoReg $end
$var reg 1 $ RegWrite $end
$upscope $end
$scope module data_mem $end
$var wire 1 . MemRead $end
$var wire 1 - MemWrite $end
$var wire 64 e, address [63:0] $end
$var wire 64 f, write_data [63:0] $end
$var reg 64 g, read_data [63:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 32 h, instruction [31:0] $end
$var wire 7 i, opcode [6:0] $end
$var reg 64 j, imm64 [63:0] $end
$upscope $end
$scope module intr_fetch $end
$var wire 64 k, PC [63:0] $end
$var wire 1 l, overflow3 $end
$var wire 1 m, overflow2 $end
$var wire 1 n, overflow1 $end
$var wire 64 o, A3 [63:0] $end
$var wire 64 p, A2 [63:0] $end
$var wire 64 q, A1 [63:0] $end
$var reg 32 r, instruction [31:0] $end
$scope module add1 $end
$var wire 64 s, A [63:0] $end
$var wire 64 t, B [63:0] $end
$var wire 1 n, overflow $end
$var wire 64 u, Sum [63:0] $end
$var wire 64 v, P [63:0] $end
$var wire 64 w, G [63:0] $end
$var wire 65 x, C [64:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$scope begin genblk2[0] $end
$var wire 1 y, temp $end
$upscope $end
$scope begin genblk2[1] $end
$var wire 1 z, temp $end
$upscope $end
$scope begin genblk2[2] $end
$var wire 1 {, temp $end
$upscope $end
$scope begin genblk2[3] $end
$var wire 1 |, temp $end
$upscope $end
$scope begin genblk2[4] $end
$var wire 1 }, temp $end
$upscope $end
$scope begin genblk2[5] $end
$var wire 1 ~, temp $end
$upscope $end
$scope begin genblk2[6] $end
$var wire 1 !- temp $end
$upscope $end
$scope begin genblk2[7] $end
$var wire 1 "- temp $end
$upscope $end
$scope begin genblk2[8] $end
$var wire 1 #- temp $end
$upscope $end
$scope begin genblk2[9] $end
$var wire 1 $- temp $end
$upscope $end
$scope begin genblk2[10] $end
$var wire 1 %- temp $end
$upscope $end
$scope begin genblk2[11] $end
$var wire 1 &- temp $end
$upscope $end
$scope begin genblk2[12] $end
$var wire 1 '- temp $end
$upscope $end
$scope begin genblk2[13] $end
$var wire 1 (- temp $end
$upscope $end
$scope begin genblk2[14] $end
$var wire 1 )- temp $end
$upscope $end
$scope begin genblk2[15] $end
$var wire 1 *- temp $end
$upscope $end
$scope begin genblk2[16] $end
$var wire 1 +- temp $end
$upscope $end
$scope begin genblk2[17] $end
$var wire 1 ,- temp $end
$upscope $end
$scope begin genblk2[18] $end
$var wire 1 -- temp $end
$upscope $end
$scope begin genblk2[19] $end
$var wire 1 .- temp $end
$upscope $end
$scope begin genblk2[20] $end
$var wire 1 /- temp $end
$upscope $end
$scope begin genblk2[21] $end
$var wire 1 0- temp $end
$upscope $end
$scope begin genblk2[22] $end
$var wire 1 1- temp $end
$upscope $end
$scope begin genblk2[23] $end
$var wire 1 2- temp $end
$upscope $end
$scope begin genblk2[24] $end
$var wire 1 3- temp $end
$upscope $end
$scope begin genblk2[25] $end
$var wire 1 4- temp $end
$upscope $end
$scope begin genblk2[26] $end
$var wire 1 5- temp $end
$upscope $end
$scope begin genblk2[27] $end
$var wire 1 6- temp $end
$upscope $end
$scope begin genblk2[28] $end
$var wire 1 7- temp $end
$upscope $end
$scope begin genblk2[29] $end
$var wire 1 8- temp $end
$upscope $end
$scope begin genblk2[30] $end
$var wire 1 9- temp $end
$upscope $end
$scope begin genblk2[31] $end
$var wire 1 :- temp $end
$upscope $end
$scope begin genblk2[32] $end
$var wire 1 ;- temp $end
$upscope $end
$scope begin genblk2[33] $end
$var wire 1 <- temp $end
$upscope $end
$scope begin genblk2[34] $end
$var wire 1 =- temp $end
$upscope $end
$scope begin genblk2[35] $end
$var wire 1 >- temp $end
$upscope $end
$scope begin genblk2[36] $end
$var wire 1 ?- temp $end
$upscope $end
$scope begin genblk2[37] $end
$var wire 1 @- temp $end
$upscope $end
$scope begin genblk2[38] $end
$var wire 1 A- temp $end
$upscope $end
$scope begin genblk2[39] $end
$var wire 1 B- temp $end
$upscope $end
$scope begin genblk2[40] $end
$var wire 1 C- temp $end
$upscope $end
$scope begin genblk2[41] $end
$var wire 1 D- temp $end
$upscope $end
$scope begin genblk2[42] $end
$var wire 1 E- temp $end
$upscope $end
$scope begin genblk2[43] $end
$var wire 1 F- temp $end
$upscope $end
$scope begin genblk2[44] $end
$var wire 1 G- temp $end
$upscope $end
$scope begin genblk2[45] $end
$var wire 1 H- temp $end
$upscope $end
$scope begin genblk2[46] $end
$var wire 1 I- temp $end
$upscope $end
$scope begin genblk2[47] $end
$var wire 1 J- temp $end
$upscope $end
$scope begin genblk2[48] $end
$var wire 1 K- temp $end
$upscope $end
$scope begin genblk2[49] $end
$var wire 1 L- temp $end
$upscope $end
$scope begin genblk2[50] $end
$var wire 1 M- temp $end
$upscope $end
$scope begin genblk2[51] $end
$var wire 1 N- temp $end
$upscope $end
$scope begin genblk2[52] $end
$var wire 1 O- temp $end
$upscope $end
$scope begin genblk2[53] $end
$var wire 1 P- temp $end
$upscope $end
$scope begin genblk2[54] $end
$var wire 1 Q- temp $end
$upscope $end
$scope begin genblk2[55] $end
$var wire 1 R- temp $end
$upscope $end
$scope begin genblk2[56] $end
$var wire 1 S- temp $end
$upscope $end
$scope begin genblk2[57] $end
$var wire 1 T- temp $end
$upscope $end
$scope begin genblk2[58] $end
$var wire 1 U- temp $end
$upscope $end
$scope begin genblk2[59] $end
$var wire 1 V- temp $end
$upscope $end
$scope begin genblk2[60] $end
$var wire 1 W- temp $end
$upscope $end
$scope begin genblk2[61] $end
$var wire 1 X- temp $end
$upscope $end
$scope begin genblk2[62] $end
$var wire 1 Y- temp $end
$upscope $end
$scope begin genblk2[63] $end
$var wire 1 Z- temp $end
$upscope $end
$scope begin sum_logic[0] $end
$upscope $end
$scope begin sum_logic[1] $end
$upscope $end
$scope begin sum_logic[2] $end
$upscope $end
$scope begin sum_logic[3] $end
$upscope $end
$scope begin sum_logic[4] $end
$upscope $end
$scope begin sum_logic[5] $end
$upscope $end
$scope begin sum_logic[6] $end
$upscope $end
$scope begin sum_logic[7] $end
$upscope $end
$scope begin sum_logic[8] $end
$upscope $end
$scope begin sum_logic[9] $end
$upscope $end
$scope begin sum_logic[10] $end
$upscope $end
$scope begin sum_logic[11] $end
$upscope $end
$scope begin sum_logic[12] $end
$upscope $end
$scope begin sum_logic[13] $end
$upscope $end
$scope begin sum_logic[14] $end
$upscope $end
$scope begin sum_logic[15] $end
$upscope $end
$scope begin sum_logic[16] $end
$upscope $end
$scope begin sum_logic[17] $end
$upscope $end
$scope begin sum_logic[18] $end
$upscope $end
$scope begin sum_logic[19] $end
$upscope $end
$scope begin sum_logic[20] $end
$upscope $end
$scope begin sum_logic[21] $end
$upscope $end
$scope begin sum_logic[22] $end
$upscope $end
$scope begin sum_logic[23] $end
$upscope $end
$scope begin sum_logic[24] $end
$upscope $end
$scope begin sum_logic[25] $end
$upscope $end
$scope begin sum_logic[26] $end
$upscope $end
$scope begin sum_logic[27] $end
$upscope $end
$scope begin sum_logic[28] $end
$upscope $end
$scope begin sum_logic[29] $end
$upscope $end
$scope begin sum_logic[30] $end
$upscope $end
$scope begin sum_logic[31] $end
$upscope $end
$scope begin sum_logic[32] $end
$upscope $end
$scope begin sum_logic[33] $end
$upscope $end
$scope begin sum_logic[34] $end
$upscope $end
$scope begin sum_logic[35] $end
$upscope $end
$scope begin sum_logic[36] $end
$upscope $end
$scope begin sum_logic[37] $end
$upscope $end
$scope begin sum_logic[38] $end
$upscope $end
$scope begin sum_logic[39] $end
$upscope $end
$scope begin sum_logic[40] $end
$upscope $end
$scope begin sum_logic[41] $end
$upscope $end
$scope begin sum_logic[42] $end
$upscope $end
$scope begin sum_logic[43] $end
$upscope $end
$scope begin sum_logic[44] $end
$upscope $end
$scope begin sum_logic[45] $end
$upscope $end
$scope begin sum_logic[46] $end
$upscope $end
$scope begin sum_logic[47] $end
$upscope $end
$scope begin sum_logic[48] $end
$upscope $end
$scope begin sum_logic[49] $end
$upscope $end
$scope begin sum_logic[50] $end
$upscope $end
$scope begin sum_logic[51] $end
$upscope $end
$scope begin sum_logic[52] $end
$upscope $end
$scope begin sum_logic[53] $end
$upscope $end
$scope begin sum_logic[54] $end
$upscope $end
$scope begin sum_logic[55] $end
$upscope $end
$scope begin sum_logic[56] $end
$upscope $end
$scope begin sum_logic[57] $end
$upscope $end
$scope begin sum_logic[58] $end
$upscope $end
$scope begin sum_logic[59] $end
$upscope $end
$scope begin sum_logic[60] $end
$upscope $end
$scope begin sum_logic[61] $end
$upscope $end
$scope begin sum_logic[62] $end
$upscope $end
$scope begin sum_logic[63] $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 64 [- A [63:0] $end
$var wire 64 \- B [63:0] $end
$var wire 1 m, overflow $end
$var wire 64 ]- Sum [63:0] $end
$var wire 64 ^- P [63:0] $end
$var wire 64 _- G [63:0] $end
$var wire 65 `- C [64:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$scope begin genblk2[0] $end
$var wire 1 a- temp $end
$upscope $end
$scope begin genblk2[1] $end
$var wire 1 b- temp $end
$upscope $end
$scope begin genblk2[2] $end
$var wire 1 c- temp $end
$upscope $end
$scope begin genblk2[3] $end
$var wire 1 d- temp $end
$upscope $end
$scope begin genblk2[4] $end
$var wire 1 e- temp $end
$upscope $end
$scope begin genblk2[5] $end
$var wire 1 f- temp $end
$upscope $end
$scope begin genblk2[6] $end
$var wire 1 g- temp $end
$upscope $end
$scope begin genblk2[7] $end
$var wire 1 h- temp $end
$upscope $end
$scope begin genblk2[8] $end
$var wire 1 i- temp $end
$upscope $end
$scope begin genblk2[9] $end
$var wire 1 j- temp $end
$upscope $end
$scope begin genblk2[10] $end
$var wire 1 k- temp $end
$upscope $end
$scope begin genblk2[11] $end
$var wire 1 l- temp $end
$upscope $end
$scope begin genblk2[12] $end
$var wire 1 m- temp $end
$upscope $end
$scope begin genblk2[13] $end
$var wire 1 n- temp $end
$upscope $end
$scope begin genblk2[14] $end
$var wire 1 o- temp $end
$upscope $end
$scope begin genblk2[15] $end
$var wire 1 p- temp $end
$upscope $end
$scope begin genblk2[16] $end
$var wire 1 q- temp $end
$upscope $end
$scope begin genblk2[17] $end
$var wire 1 r- temp $end
$upscope $end
$scope begin genblk2[18] $end
$var wire 1 s- temp $end
$upscope $end
$scope begin genblk2[19] $end
$var wire 1 t- temp $end
$upscope $end
$scope begin genblk2[20] $end
$var wire 1 u- temp $end
$upscope $end
$scope begin genblk2[21] $end
$var wire 1 v- temp $end
$upscope $end
$scope begin genblk2[22] $end
$var wire 1 w- temp $end
$upscope $end
$scope begin genblk2[23] $end
$var wire 1 x- temp $end
$upscope $end
$scope begin genblk2[24] $end
$var wire 1 y- temp $end
$upscope $end
$scope begin genblk2[25] $end
$var wire 1 z- temp $end
$upscope $end
$scope begin genblk2[26] $end
$var wire 1 {- temp $end
$upscope $end
$scope begin genblk2[27] $end
$var wire 1 |- temp $end
$upscope $end
$scope begin genblk2[28] $end
$var wire 1 }- temp $end
$upscope $end
$scope begin genblk2[29] $end
$var wire 1 ~- temp $end
$upscope $end
$scope begin genblk2[30] $end
$var wire 1 !. temp $end
$upscope $end
$scope begin genblk2[31] $end
$var wire 1 ". temp $end
$upscope $end
$scope begin genblk2[32] $end
$var wire 1 #. temp $end
$upscope $end
$scope begin genblk2[33] $end
$var wire 1 $. temp $end
$upscope $end
$scope begin genblk2[34] $end
$var wire 1 %. temp $end
$upscope $end
$scope begin genblk2[35] $end
$var wire 1 &. temp $end
$upscope $end
$scope begin genblk2[36] $end
$var wire 1 '. temp $end
$upscope $end
$scope begin genblk2[37] $end
$var wire 1 (. temp $end
$upscope $end
$scope begin genblk2[38] $end
$var wire 1 ). temp $end
$upscope $end
$scope begin genblk2[39] $end
$var wire 1 *. temp $end
$upscope $end
$scope begin genblk2[40] $end
$var wire 1 +. temp $end
$upscope $end
$scope begin genblk2[41] $end
$var wire 1 ,. temp $end
$upscope $end
$scope begin genblk2[42] $end
$var wire 1 -. temp $end
$upscope $end
$scope begin genblk2[43] $end
$var wire 1 .. temp $end
$upscope $end
$scope begin genblk2[44] $end
$var wire 1 /. temp $end
$upscope $end
$scope begin genblk2[45] $end
$var wire 1 0. temp $end
$upscope $end
$scope begin genblk2[46] $end
$var wire 1 1. temp $end
$upscope $end
$scope begin genblk2[47] $end
$var wire 1 2. temp $end
$upscope $end
$scope begin genblk2[48] $end
$var wire 1 3. temp $end
$upscope $end
$scope begin genblk2[49] $end
$var wire 1 4. temp $end
$upscope $end
$scope begin genblk2[50] $end
$var wire 1 5. temp $end
$upscope $end
$scope begin genblk2[51] $end
$var wire 1 6. temp $end
$upscope $end
$scope begin genblk2[52] $end
$var wire 1 7. temp $end
$upscope $end
$scope begin genblk2[53] $end
$var wire 1 8. temp $end
$upscope $end
$scope begin genblk2[54] $end
$var wire 1 9. temp $end
$upscope $end
$scope begin genblk2[55] $end
$var wire 1 :. temp $end
$upscope $end
$scope begin genblk2[56] $end
$var wire 1 ;. temp $end
$upscope $end
$scope begin genblk2[57] $end
$var wire 1 <. temp $end
$upscope $end
$scope begin genblk2[58] $end
$var wire 1 =. temp $end
$upscope $end
$scope begin genblk2[59] $end
$var wire 1 >. temp $end
$upscope $end
$scope begin genblk2[60] $end
$var wire 1 ?. temp $end
$upscope $end
$scope begin genblk2[61] $end
$var wire 1 @. temp $end
$upscope $end
$scope begin genblk2[62] $end
$var wire 1 A. temp $end
$upscope $end
$scope begin genblk2[63] $end
$var wire 1 B. temp $end
$upscope $end
$scope begin sum_logic[0] $end
$upscope $end
$scope begin sum_logic[1] $end
$upscope $end
$scope begin sum_logic[2] $end
$upscope $end
$scope begin sum_logic[3] $end
$upscope $end
$scope begin sum_logic[4] $end
$upscope $end
$scope begin sum_logic[5] $end
$upscope $end
$scope begin sum_logic[6] $end
$upscope $end
$scope begin sum_logic[7] $end
$upscope $end
$scope begin sum_logic[8] $end
$upscope $end
$scope begin sum_logic[9] $end
$upscope $end
$scope begin sum_logic[10] $end
$upscope $end
$scope begin sum_logic[11] $end
$upscope $end
$scope begin sum_logic[12] $end
$upscope $end
$scope begin sum_logic[13] $end
$upscope $end
$scope begin sum_logic[14] $end
$upscope $end
$scope begin sum_logic[15] $end
$upscope $end
$scope begin sum_logic[16] $end
$upscope $end
$scope begin sum_logic[17] $end
$upscope $end
$scope begin sum_logic[18] $end
$upscope $end
$scope begin sum_logic[19] $end
$upscope $end
$scope begin sum_logic[20] $end
$upscope $end
$scope begin sum_logic[21] $end
$upscope $end
$scope begin sum_logic[22] $end
$upscope $end
$scope begin sum_logic[23] $end
$upscope $end
$scope begin sum_logic[24] $end
$upscope $end
$scope begin sum_logic[25] $end
$upscope $end
$scope begin sum_logic[26] $end
$upscope $end
$scope begin sum_logic[27] $end
$upscope $end
$scope begin sum_logic[28] $end
$upscope $end
$scope begin sum_logic[29] $end
$upscope $end
$scope begin sum_logic[30] $end
$upscope $end
$scope begin sum_logic[31] $end
$upscope $end
$scope begin sum_logic[32] $end
$upscope $end
$scope begin sum_logic[33] $end
$upscope $end
$scope begin sum_logic[34] $end
$upscope $end
$scope begin sum_logic[35] $end
$upscope $end
$scope begin sum_logic[36] $end
$upscope $end
$scope begin sum_logic[37] $end
$upscope $end
$scope begin sum_logic[38] $end
$upscope $end
$scope begin sum_logic[39] $end
$upscope $end
$scope begin sum_logic[40] $end
$upscope $end
$scope begin sum_logic[41] $end
$upscope $end
$scope begin sum_logic[42] $end
$upscope $end
$scope begin sum_logic[43] $end
$upscope $end
$scope begin sum_logic[44] $end
$upscope $end
$scope begin sum_logic[45] $end
$upscope $end
$scope begin sum_logic[46] $end
$upscope $end
$scope begin sum_logic[47] $end
$upscope $end
$scope begin sum_logic[48] $end
$upscope $end
$scope begin sum_logic[49] $end
$upscope $end
$scope begin sum_logic[50] $end
$upscope $end
$scope begin sum_logic[51] $end
$upscope $end
$scope begin sum_logic[52] $end
$upscope $end
$scope begin sum_logic[53] $end
$upscope $end
$scope begin sum_logic[54] $end
$upscope $end
$scope begin sum_logic[55] $end
$upscope $end
$scope begin sum_logic[56] $end
$upscope $end
$scope begin sum_logic[57] $end
$upscope $end
$scope begin sum_logic[58] $end
$upscope $end
$scope begin sum_logic[59] $end
$upscope $end
$scope begin sum_logic[60] $end
$upscope $end
$scope begin sum_logic[61] $end
$upscope $end
$scope begin sum_logic[62] $end
$upscope $end
$scope begin sum_logic[63] $end
$upscope $end
$upscope $end
$scope module add3 $end
$var wire 64 C. A [63:0] $end
$var wire 64 D. B [63:0] $end
$var wire 1 l, overflow $end
$var wire 64 E. Sum [63:0] $end
$var wire 64 F. P [63:0] $end
$var wire 64 G. G [63:0] $end
$var wire 65 H. C [64:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$scope begin genblk2[0] $end
$var wire 1 I. temp $end
$upscope $end
$scope begin genblk2[1] $end
$var wire 1 J. temp $end
$upscope $end
$scope begin genblk2[2] $end
$var wire 1 K. temp $end
$upscope $end
$scope begin genblk2[3] $end
$var wire 1 L. temp $end
$upscope $end
$scope begin genblk2[4] $end
$var wire 1 M. temp $end
$upscope $end
$scope begin genblk2[5] $end
$var wire 1 N. temp $end
$upscope $end
$scope begin genblk2[6] $end
$var wire 1 O. temp $end
$upscope $end
$scope begin genblk2[7] $end
$var wire 1 P. temp $end
$upscope $end
$scope begin genblk2[8] $end
$var wire 1 Q. temp $end
$upscope $end
$scope begin genblk2[9] $end
$var wire 1 R. temp $end
$upscope $end
$scope begin genblk2[10] $end
$var wire 1 S. temp $end
$upscope $end
$scope begin genblk2[11] $end
$var wire 1 T. temp $end
$upscope $end
$scope begin genblk2[12] $end
$var wire 1 U. temp $end
$upscope $end
$scope begin genblk2[13] $end
$var wire 1 V. temp $end
$upscope $end
$scope begin genblk2[14] $end
$var wire 1 W. temp $end
$upscope $end
$scope begin genblk2[15] $end
$var wire 1 X. temp $end
$upscope $end
$scope begin genblk2[16] $end
$var wire 1 Y. temp $end
$upscope $end
$scope begin genblk2[17] $end
$var wire 1 Z. temp $end
$upscope $end
$scope begin genblk2[18] $end
$var wire 1 [. temp $end
$upscope $end
$scope begin genblk2[19] $end
$var wire 1 \. temp $end
$upscope $end
$scope begin genblk2[20] $end
$var wire 1 ]. temp $end
$upscope $end
$scope begin genblk2[21] $end
$var wire 1 ^. temp $end
$upscope $end
$scope begin genblk2[22] $end
$var wire 1 _. temp $end
$upscope $end
$scope begin genblk2[23] $end
$var wire 1 `. temp $end
$upscope $end
$scope begin genblk2[24] $end
$var wire 1 a. temp $end
$upscope $end
$scope begin genblk2[25] $end
$var wire 1 b. temp $end
$upscope $end
$scope begin genblk2[26] $end
$var wire 1 c. temp $end
$upscope $end
$scope begin genblk2[27] $end
$var wire 1 d. temp $end
$upscope $end
$scope begin genblk2[28] $end
$var wire 1 e. temp $end
$upscope $end
$scope begin genblk2[29] $end
$var wire 1 f. temp $end
$upscope $end
$scope begin genblk2[30] $end
$var wire 1 g. temp $end
$upscope $end
$scope begin genblk2[31] $end
$var wire 1 h. temp $end
$upscope $end
$scope begin genblk2[32] $end
$var wire 1 i. temp $end
$upscope $end
$scope begin genblk2[33] $end
$var wire 1 j. temp $end
$upscope $end
$scope begin genblk2[34] $end
$var wire 1 k. temp $end
$upscope $end
$scope begin genblk2[35] $end
$var wire 1 l. temp $end
$upscope $end
$scope begin genblk2[36] $end
$var wire 1 m. temp $end
$upscope $end
$scope begin genblk2[37] $end
$var wire 1 n. temp $end
$upscope $end
$scope begin genblk2[38] $end
$var wire 1 o. temp $end
$upscope $end
$scope begin genblk2[39] $end
$var wire 1 p. temp $end
$upscope $end
$scope begin genblk2[40] $end
$var wire 1 q. temp $end
$upscope $end
$scope begin genblk2[41] $end
$var wire 1 r. temp $end
$upscope $end
$scope begin genblk2[42] $end
$var wire 1 s. temp $end
$upscope $end
$scope begin genblk2[43] $end
$var wire 1 t. temp $end
$upscope $end
$scope begin genblk2[44] $end
$var wire 1 u. temp $end
$upscope $end
$scope begin genblk2[45] $end
$var wire 1 v. temp $end
$upscope $end
$scope begin genblk2[46] $end
$var wire 1 w. temp $end
$upscope $end
$scope begin genblk2[47] $end
$var wire 1 x. temp $end
$upscope $end
$scope begin genblk2[48] $end
$var wire 1 y. temp $end
$upscope $end
$scope begin genblk2[49] $end
$var wire 1 z. temp $end
$upscope $end
$scope begin genblk2[50] $end
$var wire 1 {. temp $end
$upscope $end
$scope begin genblk2[51] $end
$var wire 1 |. temp $end
$upscope $end
$scope begin genblk2[52] $end
$var wire 1 }. temp $end
$upscope $end
$scope begin genblk2[53] $end
$var wire 1 ~. temp $end
$upscope $end
$scope begin genblk2[54] $end
$var wire 1 !/ temp $end
$upscope $end
$scope begin genblk2[55] $end
$var wire 1 "/ temp $end
$upscope $end
$scope begin genblk2[56] $end
$var wire 1 #/ temp $end
$upscope $end
$scope begin genblk2[57] $end
$var wire 1 $/ temp $end
$upscope $end
$scope begin genblk2[58] $end
$var wire 1 %/ temp $end
$upscope $end
$scope begin genblk2[59] $end
$var wire 1 &/ temp $end
$upscope $end
$scope begin genblk2[60] $end
$var wire 1 '/ temp $end
$upscope $end
$scope begin genblk2[61] $end
$var wire 1 (/ temp $end
$upscope $end
$scope begin genblk2[62] $end
$var wire 1 )/ temp $end
$upscope $end
$scope begin genblk2[63] $end
$var wire 1 */ temp $end
$upscope $end
$scope begin sum_logic[0] $end
$upscope $end
$scope begin sum_logic[1] $end
$upscope $end
$scope begin sum_logic[2] $end
$upscope $end
$scope begin sum_logic[3] $end
$upscope $end
$scope begin sum_logic[4] $end
$upscope $end
$scope begin sum_logic[5] $end
$upscope $end
$scope begin sum_logic[6] $end
$upscope $end
$scope begin sum_logic[7] $end
$upscope $end
$scope begin sum_logic[8] $end
$upscope $end
$scope begin sum_logic[9] $end
$upscope $end
$scope begin sum_logic[10] $end
$upscope $end
$scope begin sum_logic[11] $end
$upscope $end
$scope begin sum_logic[12] $end
$upscope $end
$scope begin sum_logic[13] $end
$upscope $end
$scope begin sum_logic[14] $end
$upscope $end
$scope begin sum_logic[15] $end
$upscope $end
$scope begin sum_logic[16] $end
$upscope $end
$scope begin sum_logic[17] $end
$upscope $end
$scope begin sum_logic[18] $end
$upscope $end
$scope begin sum_logic[19] $end
$upscope $end
$scope begin sum_logic[20] $end
$upscope $end
$scope begin sum_logic[21] $end
$upscope $end
$scope begin sum_logic[22] $end
$upscope $end
$scope begin sum_logic[23] $end
$upscope $end
$scope begin sum_logic[24] $end
$upscope $end
$scope begin sum_logic[25] $end
$upscope $end
$scope begin sum_logic[26] $end
$upscope $end
$scope begin sum_logic[27] $end
$upscope $end
$scope begin sum_logic[28] $end
$upscope $end
$scope begin sum_logic[29] $end
$upscope $end
$scope begin sum_logic[30] $end
$upscope $end
$scope begin sum_logic[31] $end
$upscope $end
$scope begin sum_logic[32] $end
$upscope $end
$scope begin sum_logic[33] $end
$upscope $end
$scope begin sum_logic[34] $end
$upscope $end
$scope begin sum_logic[35] $end
$upscope $end
$scope begin sum_logic[36] $end
$upscope $end
$scope begin sum_logic[37] $end
$upscope $end
$scope begin sum_logic[38] $end
$upscope $end
$scope begin sum_logic[39] $end
$upscope $end
$scope begin sum_logic[40] $end
$upscope $end
$scope begin sum_logic[41] $end
$upscope $end
$scope begin sum_logic[42] $end
$upscope $end
$scope begin sum_logic[43] $end
$upscope $end
$scope begin sum_logic[44] $end
$upscope $end
$scope begin sum_logic[45] $end
$upscope $end
$scope begin sum_logic[46] $end
$upscope $end
$scope begin sum_logic[47] $end
$upscope $end
$scope begin sum_logic[48] $end
$upscope $end
$scope begin sum_logic[49] $end
$upscope $end
$scope begin sum_logic[50] $end
$upscope $end
$scope begin sum_logic[51] $end
$upscope $end
$scope begin sum_logic[52] $end
$upscope $end
$scope begin sum_logic[53] $end
$upscope $end
$scope begin sum_logic[54] $end
$upscope $end
$scope begin sum_logic[55] $end
$upscope $end
$scope begin sum_logic[56] $end
$upscope $end
$scope begin sum_logic[57] $end
$upscope $end
$scope begin sum_logic[58] $end
$upscope $end
$scope begin sum_logic[59] $end
$upscope $end
$scope begin sum_logic[60] $end
$upscope $end
$scope begin sum_logic[61] $end
$upscope $end
$scope begin sum_logic[62] $end
$upscope $end
$scope begin sum_logic[63] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 64 +/ A [63:0] $end
$var wire 64 ,/ B [63:0] $end
$var wire 1 2 sel $end
$var wire 64 -/ Y [63:0] $end
$upscope $end
$scope module mux2 $end
$var wire 64 ./ A [63:0] $end
$var wire 64 // B [63:0] $end
$var wire 1 , sel $end
$var wire 64 0/ Y [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0/
bx //
bx ./
b0 -/
b0 ,/
b0 +/
0*/
0)/
0(/
0'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
0Y.
0X.
0W.
0V.
0U.
0T.
0S.
0R.
0Q.
0P.
0O.
0N.
0M.
0L.
0K.
0J.
0I.
b0 H.
b0 G.
b11 F.
b11 E.
b11 D.
b0 C.
0B.
0A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
07.
06.
05.
04.
03.
02.
01.
00.
0/.
0..
0-.
0,.
0+.
0*.
0).
0(.
0'.
0&.
0%.
0$.
0#.
0".
0!.
0~-
0}-
0|-
0{-
0z-
0y-
0x-
0w-
0v-
0u-
0t-
0s-
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0g-
0f-
0e-
0d-
0c-
0b-
0a-
b0 `-
b0 _-
b10 ^-
b10 ]-
b10 \-
b0 [-
0Z-
0Y-
0X-
0W-
0V-
0U-
0T-
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
0E-
0D-
0C-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
07-
06-
05-
04-
03-
02-
01-
00-
0/-
0.-
0--
0,-
0+-
0*-
0)-
0(-
0'-
0&-
0%-
0$-
0#-
0"-
0!-
0~,
0},
0|,
0{,
0z,
0y,
b0 x,
b0 w,
b1 v,
b1 u,
b1 t,
b0 s,
b11001100011 r,
b1 q,
b10 p,
b11 o,
0n,
0m,
0l,
b0 k,
b0 j,
b0 i,
b0 h,
bx g,
bx f,
bx e,
b0 d,
b0 c,
b10 b,
b0 a,
b0 `,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
x%*
x$*
x#*
x"*
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
13'
x2'
x1'
bx1 0'
bx /'
1.'
bx -'
bx ,'
bx +'
bx *'
bx )'
bx ('
bx ''
bx &'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
0a
x`
x_
x^
x]
0\
x[
xZ
bx0 Y
bx X
0W
bx V
bx U
bx T
b10 S
bx R
xQ
xP
bx O
bx N
xM
xL
bx K
bx J
bx I
bx H
bx G
bx F
bx E
0D
0C
0B
b0 A
0@
0?
bx >
bx =
bx <
b0 ;
0:
bx 9
bx 8
bx 7
x6
bx 5
b10 4
b0 3
02
bx 1
b0 0
0/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
b11001100011 '
x&
bx %
0$
bx #
0"
0!
$end
#5000
1Q
0],
1V,
0W,
1Z,
1U,
1N,
0O,
1R,
1M,
1F,
0G,
1J,
1E,
1>,
0?,
1B,
1=,
16,
07,
1:,
15,
1.,
0/,
12,
1-,
1&,
0',
1*,
1%,
1|+
0}+
1",
1{+
1t+
0u+
1x+
1s+
1l+
0m+
1p+
1k+
1d+
0e+
1h+
1c+
1\+
0]+
1`+
1[+
1T+
0U+
1X+
1S+
1L+
0M+
1P+
1K+
1D+
0E+
1H+
1C+
1<+
0=+
1@+
1;+
14+
05+
18+
13+
1,+
0-+
10+
1++
1$+
0%+
1(+
1#+
1z*
0{*
1~*
1y*
1r*
0s*
1v*
1q*
1j*
0k*
1n*
1i*
1b*
0c*
1f*
1a*
1Z*
0[*
1^*
1Y*
1R*
0S*
1V*
1Q*
1J*
0K*
1N*
1I*
1B*
0C*
1F*
1A*
1:*
0;*
1>*
19*
12*
03*
16*
11*
1**
0+*
1.*
1)*
1"*
0#*
1&*
1!*
1x)
0y)
1|)
1w)
1p)
0q)
1t)
1o)
1h)
0i)
1l)
1g)
1`)
0a)
1d)
1_)
1X)
0Y)
1\)
1W)
1P)
0Q)
1T)
1O)
1H)
0I)
1L)
1G)
1@)
0A)
1D)
1?)
18)
09)
1<)
17)
10)
01)
14)
1/)
1()
0))
1,)
1')
1~(
0!)
1$)
1}(
1v(
0w(
1z(
1u(
1n(
0o(
1r(
1m(
1f(
0g(
1j(
1e(
1^(
0_(
1b(
1](
1V(
0W(
1Z(
1U(
1N(
0O(
1R(
1M(
1F(
0G(
1J(
1E(
1>(
0?(
1B(
1=(
16(
07(
1:(
15(
1.(
0/(
12(
1-(
1&(
0'(
1*(
1%(
1|'
0}'
1"(
1{'
1t'
0u'
1x'
1s'
1l'
0m'
1p'
1k'
1d'
0e'
1h'
1c'
1\'
0]'
1`'
1['
1T'
0U'
1X'
1S'
1L'
0M'
1P'
1K'
1D'
0E'
1H'
1C'
1<'
0='
1@'
1;'
0n
0v
0~
0("
00"
08"
0@"
0H"
0P"
0X"
0`"
0h"
0p"
0x"
0"#
0*#
02#
0:#
0B#
0J#
0R#
0Z#
0b#
0j#
0r#
0z#
0$$
0,$
04$
0<$
0D$
0L$
0T$
0\$
0d$
0l$
0t$
0|$
0&%
0.%
06%
0>%
0F%
0N%
0V%
0^%
0f%
0n%
0v%
0~%
0(&
00&
08&
0@&
0H&
0P&
0X&
0`&
0h&
0p&
0x&
0"'
0L
b0 1
b0 T
b11111111111111111111111111111111111111111111111111111111111111111 0'
14'
0f
0l
0t
0|
0&"
0."
06"
0>"
0F"
0N"
0V"
0^"
0f"
0n"
0v"
0~"
0(#
00#
08#
0@#
0H#
0P#
0X#
0`#
0h#
0p#
0x#
0"$
0*$
02$
0:$
0B$
0J$
0R$
0Z$
0b$
0j$
0r$
0z$
0$%
0,%
04%
0<%
0D%
0L%
0T%
0\%
0d%
0l%
0t%
0|%
0&&
0.&
06&
0>&
0F&
0N&
0V&
0^&
0f&
0n&
0v&
0~&
0M
b101 q,
b101 u,
b110 p,
b110 ]-
b111 o,
b111 E.
b0 O
b0 /'
05'
18'
0d
0e
0m
0u
0}
0'"
0/"
07"
0?"
0G"
0O"
0W"
0_"
0g"
0o"
0w"
0!#
0)#
01#
09#
0A#
0I#
0Q#
0Y#
0a#
0i#
0q#
0y#
0#$
0+$
03$
0;$
0C$
0K$
0S$
0[$
0c$
0k$
0s$
0{$
0%%
0-%
05%
0=%
0E%
0M%
0U%
0]%
0e%
0m%
0u%
0}%
0'&
0/&
07&
0?&
0G&
0O&
0W&
0_&
0g&
0o&
0w&
0!'
16'
1>'
1F'
1N'
1V'
1^'
1f'
1n'
1v'
1~'
1((
10(
18(
1@(
1H(
1P(
1X(
1`(
1h(
1p(
1x(
1")
1*)
12)
1:)
1B)
1J)
1R)
1Z)
1b)
1j)
1r)
1z)
1$*
1,*
14*
1<*
1D*
1L*
1T*
1\*
1d*
1l*
1t*
1|*
1&+
1.+
16+
1>+
1F+
1N+
1V+
1^+
1f+
1n+
1v+
1~+
1(,
10,
18,
1@,
1H,
1P,
1X,
b0 K
b0 X
0^
b0 Y
0]
0i
0q
0y
0#"
0+"
03"
0;"
0C"
0K"
0S"
0["
0c"
0k"
0s"
0{"
0%#
0-#
05#
0=#
0E#
0M#
0U#
0]#
0e#
0m#
0u#
0}#
0'$
0/$
07$
0?$
0G$
0O$
0W$
0_$
0g$
0o$
0w$
0!%
0)%
01%
09%
0A%
0I%
0Q%
0Y%
0a%
0i%
0q%
0y%
0#&
0+&
03&
0;&
0C&
0K&
0S&
0[&
0c&
0k&
0s&
0{&
0%'
1"
0&
0P
b110 4
b110 S
b110 b,
b101 v,
b110 ^-
b111 F.
12'
1:'
1B'
1J'
1R'
1Z'
1b'
1j'
1r'
1z'
1$(
1,(
14(
1<(
1D(
1L(
1T(
1\(
1d(
1l(
1t(
1|(
1&)
1.)
16)
1>)
1F)
1N)
1V)
1^)
1f)
1n)
1v)
1~)
1(*
10*
18*
1@*
1H*
1P*
1X*
1`*
1h*
1p*
1x*
1"+
1*+
12+
1:+
1B+
1J+
1R+
1Z+
1b+
1j+
1r+
1z+
1$,
1,,
14,
1<,
1D,
1L,
1T,
0^,
0_
0`
0g
0h
0o
0p
0w
0x
0!"
0""
0)"
0*"
01"
02"
09"
0:"
0A"
0B"
0I"
0J"
0Q"
0R"
0Y"
0Z"
0a"
0b"
0i"
0j"
0q"
0r"
0y"
0z"
0##
0$#
0+#
0,#
03#
04#
0;#
0<#
0C#
0D#
0K#
0L#
0S#
0T#
0[#
0\#
0c#
0d#
0k#
0l#
0s#
0t#
0{#
0|#
0%$
0&$
0-$
0.$
05$
06$
0=$
0>$
0E$
0F$
0M$
0N$
0U$
0V$
0]$
0^$
0e$
0f$
0m$
0n$
0u$
0v$
0}$
0~$
0'%
0(%
0/%
00%
07%
08%
0?%
0@%
0G%
0H%
0O%
0P%
0W%
0X%
0_%
0`%
0g%
0h%
0o%
0p%
0w%
0x%
0!&
0"&
0)&
0*&
01&
02&
09&
0:&
0A&
0B&
0I&
0J&
0Q&
0R&
0Y&
0Z&
0a&
0b&
0i&
0j&
0q&
0r&
0y&
0z&
0#'
0$'
b0 R
b0 ('
b0 N
b0 +'
07'
0?'
0G'
0O'
0W'
0_'
0g'
0o'
0w'
0!(
0)(
01(
09(
0A(
0I(
0Q(
0Y(
0a(
0i(
0q(
0y(
0#)
0+)
03)
0;)
0C)
0K)
0S)
0[)
0c)
0k)
0s)
0{)
0%*
0-*
05*
0=*
0E*
0M*
0U*
0]*
0e*
0m*
0u*
0}*
0'+
0/+
07+
0?+
0G+
0O+
0W+
0_+
0g+
0o+
0w+
0!,
0),
01,
09,
0A,
0I,
0Q,
0Y,
0_,
b1 3
b1 a,
b1 d,
1/
b1100 *
b1111011101000001110110011 '
b1111011101000001110110011 r,
b0 #
b0 0/
0[
0c
0k
0s
0{
0%"
0-"
05"
0="
0E"
0M"
0U"
0]"
0e"
0m"
0u"
0}"
0'#
0/#
07#
0?#
0G#
0O#
0W#
0_#
0g#
0o#
0w#
0!$
0)$
01$
09$
0A$
0I$
0Q$
0Y$
0a$
0i$
0q$
0y$
0#%
0+%
03%
0;%
0C%
0K%
0S%
0[%
0c%
0k%
0s%
0{%
0%&
0-&
05&
0=&
0E&
0M&
0U&
0]&
0e&
0m&
0u&
0}&
0\,
0Z
0b
0j
0r
0z
0$"
0,"
04"
0<"
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0~#
0($
00$
08$
0@$
0H$
0P$
0X$
0`$
0h$
0p$
0x$
0"%
0*%
02%
0:%
0B%
0J%
0R%
0Z%
0b%
0j%
0r%
0z%
0$&
0,&
04&
0<&
0D&
0L&
0T&
0\&
0d&
0l&
0t&
0|&
01'
09'
0A'
0I'
0Q'
0Y'
0a'
0i'
0q'
0y'
0#(
0+(
03(
0;(
0C(
0K(
0S(
0[(
0c(
0k(
0s(
0{(
0%)
0-)
05)
0=)
0E)
0M)
0U)
0])
0e)
0m)
0u)
0})
0'*
0/*
07*
0?*
0G*
0O*
0W*
0_*
0g*
0o*
0w*
0!+
0)+
01+
09+
0A+
0I+
0Q+
0Y+
0a+
0i+
0q+
0y+
0#,
0+,
03,
0;,
0C,
0K,
0S,
0[,
b1100011 c,
b1100 (
b1100 j,
b1100 ,/
b1100011 i,
b100 A
b100 k,
b100 s,
b100 [-
b100 C.
b0 F
b0 7
b0 ./
b0 8
b0 //
b0 E
b0 9
b0 f,
b0 5
b0 e,
06
1:
b0 H
b0 J
b0 V
b0 ''
b0 *'
b0 -'
b0 G
b0 I
b0 U
b0 &'
b0 )'
b0 ,'
b0 <
b0 >
b0 =
b11001100011 ;
b11001100011 h,
1!
#10000
0!
#15000
b10001 q,
b10001 u,
b10010 p,
b10010 ]-
b10011 o,
b10011 E.
0"
b10 4
b10 S
b10 b,
b10001 v,
b10010 ^-
b10011 F.
1$
b10 3
b10 a,
b10 d,
0/
b1 +
b1 -/
b11110 )
b111 *
b11100010011000000100011 '
b11100010011000000100011 r,
b110011 c,
b1 +/
b0 (
b0 j,
b0 ,/
b110011 i,
b10000 A
b10000 k,
b10000 s,
b10000 [-
b10000 C.
b1100 <
b1111011101000001110110011 ;
b1111011101000001110110011 h,
1!
#20000
0!
#25000
0Q
1],
0V,
1W,
0Z,
0U,
0N,
1O,
0R,
0M,
0F,
1G,
0J,
0E,
0>,
1?,
0B,
0=,
06,
17,
0:,
05,
0.,
1/,
02,
0-,
0&,
1',
0*,
0%,
0|+
1}+
0",
0{+
0t+
1u+
0x+
0s+
0l+
1m+
0p+
0k+
0d+
1e+
0h+
0c+
0\+
1]+
0`+
0[+
0T+
1U+
0X+
0S+
0L+
1M+
0P+
0K+
0D+
1E+
0H+
0C+
0<+
1=+
0@+
0;+
04+
15+
08+
03+
0,+
1-+
00+
0++
0$+
1%+
0(+
0#+
0z*
1{*
0~*
0y*
0r*
1s*
0v*
0q*
0j*
1k*
0n*
0i*
0b*
1c*
0f*
0a*
0Z*
1[*
0^*
0Y*
0R*
1S*
0V*
0Q*
0J*
1K*
0N*
0I*
0B*
1C*
0F*
0A*
0:*
1;*
0>*
09*
02*
13*
06*
01*
0**
1+*
0.*
0)*
0"*
1#*
0&*
0!*
0x)
1y)
0|)
0w)
0p)
1q)
0t)
0o)
0h)
1i)
0l)
0g)
0`)
1a)
0d)
0_)
0X)
1Y)
0\)
0W)
0P)
1Q)
0T)
0O)
0H)
1I)
0L)
0G)
0@)
1A)
0D)
0?)
08)
19)
0<)
07)
00)
11)
04)
0/)
0()
1))
0,)
0')
0~(
1!)
0$)
0}(
0v(
1w(
0z(
0u(
0n(
1o(
0r(
0m(
0f(
1g(
0j(
0e(
0^(
1_(
0b(
0](
0V(
1W(
0Z(
0U(
0N(
1O(
0R(
0M(
0F(
1G(
0J(
0E(
0>(
1?(
0B(
0=(
06(
17(
0:(
05(
0.(
1/(
02(
0-(
0&(
1'(
0*(
0%(
0|'
1}'
0"(
0{'
0t'
1u'
0x'
0s'
0l'
1m'
0p'
0k'
0d'
1e'
0h'
0c'
0\'
1]'
0`'
0['
0T'
1U'
0X'
0S'
0L'
1M'
0P'
0K'
0D'
1E'
0H'
0C'
0<'
1='
0@'
0;'
b1 0'
04'
b10101 q,
b10101 u,
b10110 p,
b10110 ]-
b10111 o,
b10111 E.
b1111111111111111111111111111111111111111111111111111111111111111 O
b1111111111111111111111111111111111111111111111111111111111111111 /'
15'
08'
b1 1
b1 T
b1 K
b1 X
1^
06'
b10101 v,
b10110 ^-
b10111 F.
1_
b1 N
b1 +'
02'
1-
12
0$
b0 3
b0 a,
b0 d,
b0 +
b0 -/
b111 )
b0 *
b10 4
b10 S
b10 b,
b10011111100000011 '
b10011111100000011 r,
1[
b100011 c,
b0 +/
b11 0
b11 `,
b100011 i,
b10100 A
b10100 k,
b10100 s,
b10100 [-
b10100 C.
b1100 E
b1 H
b1 J
b1 V
b1 ''
b1 *'
b1 -'
b111 <
b11110 >
b11101 =
b11100010011000000100011 ;
b11100010011000000100011 h,
1!
#30000
0!
#35000
b1 %
b1 g,
1Q
0],
1V,
0W,
1Z,
1U,
1N,
0O,
1R,
1M,
1F,
0G,
1J,
1E,
1>,
0?,
1B,
1=,
16,
07,
1:,
15,
1.,
0/,
12,
1-,
1&,
0',
1*,
1%,
1|+
0}+
1",
1{+
1t+
0u+
1x+
1s+
1l+
0m+
1p+
1k+
1d+
0e+
1h+
1c+
1\+
0]+
1`+
1[+
1T+
0U+
1X+
1S+
1L+
0M+
1P+
1K+
1D+
0E+
1H+
1C+
1<+
0=+
1@+
1;+
14+
05+
18+
13+
1,+
0-+
10+
1++
1$+
0%+
1(+
1#+
1z*
0{*
1~*
1y*
1r*
0s*
1v*
1q*
1j*
0k*
1n*
1i*
1b*
0c*
1f*
1a*
1Z*
0[*
1^*
1Y*
1R*
0S*
1V*
1Q*
1J*
0K*
1N*
1I*
1B*
0C*
1F*
1A*
1:*
0;*
1>*
19*
12*
03*
16*
11*
1**
0+*
1.*
1)*
1"*
0#*
1&*
1!*
1x)
0y)
1|)
1w)
1p)
0q)
1t)
1o)
1h)
0i)
1l)
1g)
1`)
0a)
1d)
1_)
1X)
0Y)
1\)
1W)
1P)
0Q)
1T)
1O)
1H)
0I)
1L)
1G)
1@)
0A)
1D)
1?)
18)
09)
1<)
17)
10)
01)
14)
1/)
1()
0))
1,)
1')
1~(
0!)
1$)
1}(
1v(
0w(
1z(
1u(
1n(
0o(
1r(
1m(
1f(
0g(
1j(
1e(
1^(
0_(
1b(
1](
1V(
0W(
1Z(
1U(
1N(
0O(
1R(
1M(
1F(
0G(
1J(
1E(
1>(
0?(
1B(
1=(
16(
07(
1:(
15(
1.(
0/(
12(
1-(
1&(
0'(
1*(
1%(
1|'
0}'
1"(
1{'
1t'
0u'
1x'
1s'
1l'
0m'
1p'
1k'
1d'
0e'
1h'
1c'
1\'
0]'
1`'
1['
1T'
0U'
1X'
1S'
1L'
0M'
1P'
1K'
1D'
0E'
1H'
1C'
1<'
0='
1@'
1;'
b11111111111111111111111111111111111111111111111111111111111111111 0'
14'
b11001 q,
b11001 u,
b11010 p,
b11010 ]-
b11011 o,
b11011 E.
b0 1
b0 T
b0 O
b0 /'
05'
18'
b0 K
b0 X
0^
16'
b11110 *
b11001 v,
b11010 ^-
b11011 F.
0_
b0 N
b0 +'
12'
1.
1,
1$
12
0-
b0 )
b11111110000000000000101001100011 '
b11111110000000000000101001100011 r,
0[
b11 c,
b11 i,
b11000 A
b11000 k,
b11000 s,
b11000 [-
b11000 C.
b111 E
b1 9
b1 f,
b1 5
b1 e,
1?
b0 H
b0 J
b0 V
b0 ''
b0 *'
b0 -'
b0 <
b111 >
b10 =
b10011111100000011 ;
b10011111100000011 h,
1!
#40000
0!
#45000
b0 %
b0 g,
b11111110000000000000100101100011 '
b11111110000000000000100101100011 r,
b11101 q,
b11101 u,
b11110 p,
b11110 ]-
b11111 o,
b11111 E.
1"
b110 4
b110 S
b110 b,
b11101 v,
b11110 ^-
b11111 F.
b1 3
b1 a,
b1 d,
1/
0$
02
0,
0.
b10100 *
b0 +
b0 -/
b1100011 c,
b1000 0
b1000 `,
b1111111111111111111111111111111111111111111111111111111111110100 (
b1111111111111111111111111111111111111111111111111111111111110100 j,
b1111111111111111111111111111111111111111111111111111111111110100 ,/
b1100011 i,
b11100 A
b11100 k,
b11100 s,
b11100 [-
b11100 C.
b0 E
b0 9
b0 f,
b0 5
b0 e,
1B
1@
b11110 <
b0 >
b11111110000000000000101001100011 ;
b11111110000000000000101001100011 h,
1!
#50000
0!
#55000
b10001 q,
b10001 u,
b10010 p,
b10010 ]-
b10011 o,
b10011 E.
b10001 v,
b10010 ^-
b10011 F.
b10010 *
b11100010011000000100011 '
b11100010011000000100011 r,
b1111111111111111111111111111111111111111111111111111111111110010 (
b1111111111111111111111111111111111111111111111111111111111110010 j,
b1111111111111111111111111111111111111111111111111111111111110010 ,/
b10000 A
b10000 k,
b10000 s,
b10000 [-
b10000 C.
b11110 E
0B
0?
1C
b10100 <
b0 =
b11111110000000000000100101100011 ;
b11111110000000000000100101100011 h,
1!
#60000
0!
#65000
b11 q,
b11 u,
b100 `-
b100 p,
b100 ]-
b100 H.
b101 o,
b101 E.
0"
b10 4
b10 S
b10 b,
b11 v,
b10 _-
b0 ^-
b10 G.
b1 F.
1-
12
b0 3
b0 a,
b0 d,
0/
b111 )
b0 *
b10000011101100110000000000000000 '
b10000011101100110000000000000000 r,
b100011 c,
b11 0
b11 `,
b0 (
b0 j,
b0 ,/
b100011 i,
b10 A
b10 k,
b10 s,
b10 [-
b10 C.
b11110 F
b10100 E
0@
0C
1D
b10010 <
b11100010011000000100011 ;
b11100010011000000100011 h,
1!
#70000
0!
#75000
b1100 `-
b1100 H.
b111 q,
b111 u,
1c-
b1000 p,
b1000 ]-
1K.
b1001 o,
b1001 E.
b111 v,
b100 ^-
b101 F.
02
0-
b11011 )
b110000001000110000000111101110 '
b110000001000110000000111101110 r,
b0 c,
b0 0
b0 `,
b0 i,
b110 A
b110 k,
b110 s,
b110 [-
b110 C.
b0 F
b10010 E
1?
0D
b0 <
b111 >
b10 =
b10000011101100110000000000000000 ;
b10000011101100110000000000000000 h,
1!
#80000
0!
#85000
b100 `-
b100 H.
b1011 q,
b1011 u,
0c-
0d-
b1100 p,
b1100 ]-
0K.
0L.
b1101 o,
b1101 E.
b1111 1
b1111 T
1^
1f
1n
b1111 K
b1111 X
1v
15'
08'
1='
0@'
1E'
0H'
b1111 O
b1111 /'
1M'
0P'
b1011 v,
b1000 ^-
b1001 F.
1_
1g
1o
1w
b1111 N
b1111 +'
06'
17'
0>'
1?'
0F'
1G'
0N'
1O'
b10 )
b11 *
b111110100000110000000111100001 '
b111110100000110000000111100001 r,
1Z
1b
1j
1r
11'
19'
1A'
1I'
b1101110 c,
b1101110 i,
b1010 A
b1010 k,
b1010 s,
b1010 [-
b1010 C.
b0 E
0?
1@
b1111 G
b1111 I
b1111 U
b1111 &'
b1111 )'
b1111 ,'
b11011 >
b110 =
b110000001000110000000111101110 ;
b110000001000110000000111101110 h,
1!
#90000
0!
#95000
1d-
1L.
b11100 `-
b11100 H.
b1111 q,
b1111 u,
1c-
b10000 p,
b10000 ]-
1K.
b10001 o,
b10001 E.
b1111 v,
b1100 ^-
b1101 F.
b10100 +
b10100 -/
b1000 )
b110000001000110000000000000001 '
b110000001000110000000000000001 r,
b1100001 c,
b10100 +/
b1100001 i,
b1110 A
b1110 k,
b1110 s,
b1110 [-
b1110 C.
b1111 5
b1111 e,
0@
b11 <
b10 >
b111110100000110000000111100001 ;
b111110100000110000000111100001 h,
1!
#100000
0!
